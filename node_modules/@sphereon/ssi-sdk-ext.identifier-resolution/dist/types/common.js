"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isX5cIdentifier = exports.isCoseKeyIdentifier = exports.isKeyIdentifier = exports.isOID4VCIssuerIdentifier = exports.isKidIdentifier = exports.isJwksUrlIdentifier = exports.isOidcDiscoveryIdentifier = exports.isJwkIdentifier = exports.isIIdentifier = exports.isDidIdentifier = void 0;
function isDidIdentifier(identifier) {
    return isIIdentifier(identifier) || (typeof identifier === 'string' && identifier.startsWith('did:'));
}
exports.isDidIdentifier = isDidIdentifier;
function isIIdentifier(identifier) {
    return typeof identifier === 'object' && !Array.isArray(identifier) && 'did' in identifier && 'keys' in identifier;
}
exports.isIIdentifier = isIIdentifier;
function isJwkIdentifier(identifier) {
    return typeof identifier === 'object' && !Array.isArray(identifier) && 'kty' in identifier;
}
exports.isJwkIdentifier = isJwkIdentifier;
function isOidcDiscoveryIdentifier(identifier) {
    return typeof identifier === 'string' && identifier.startsWith('http') && identifier.endsWith('/.well-known/openid-configuration');
}
exports.isOidcDiscoveryIdentifier = isOidcDiscoveryIdentifier;
function isJwksUrlIdentifier(identifier) {
    return typeof identifier === 'string' && identifier.startsWith('http') && identifier.endsWith('jwks.json');
}
exports.isJwksUrlIdentifier = isJwksUrlIdentifier;
function isKidIdentifier(identifier) {
    return typeof identifier === 'string' && !identifier.startsWith('did:') && !identifier.startsWith('http');
}
exports.isKidIdentifier = isKidIdentifier;
function isOID4VCIssuerIdentifier(identifier) {
    return typeof identifier === 'string' && identifier.startsWith('http') && identifier.endsWith('/.well-known/openid-credential-issuer');
}
exports.isOID4VCIssuerIdentifier = isOID4VCIssuerIdentifier;
function isKeyIdentifier(identifier) {
    return (typeof identifier === 'string' &&
        !Array.isArray(identifier) &&
        typeof identifier === 'object' &&
        `kid` in identifier &&
        'publicKeyHex' in identifier);
}
exports.isKeyIdentifier = isKeyIdentifier;
function isCoseKeyIdentifier(identifier) {
    return typeof identifier === 'object' && `kty` in identifier && ('baseIV' in identifier || 'x5chain' in identifier) && !('x5c' in identifier);
}
exports.isCoseKeyIdentifier = isCoseKeyIdentifier;
function isX5cIdentifier(identifier) {
    return Array.isArray(identifier) && identifier.length > 0; // todo: Do we want to do additional validation? We know it must be DER and thus hex for instance
}
exports.isX5cIdentifier = isX5cIdentifier;
//# sourceMappingURL=common.js.map