(function (factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', './kotlinx-serialization-kotlinx-serialization-core.js', './kotlin-kotlin-stdlib.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('./kotlinx-serialization-kotlinx-serialization-core.js'), require('./kotlin-kotlin-stdlib.js'));
  else {
    if (typeof globalThis['kotlinx-serialization-kotlinx-serialization-core'] === 'undefined') {
      throw new Error("Error loading module 'kotlinx-serialization-kotlinx-serialization-json'. Its dependency 'kotlinx-serialization-kotlinx-serialization-core' was not found. Please, check whether 'kotlinx-serialization-kotlinx-serialization-core' is loaded prior to 'kotlinx-serialization-kotlinx-serialization-json'.");
    }
    if (typeof globalThis['kotlin-kotlin-stdlib'] === 'undefined') {
      throw new Error("Error loading module 'kotlinx-serialization-kotlinx-serialization-json'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'kotlinx-serialization-kotlinx-serialization-json'.");
    }
    globalThis['kotlinx-serialization-kotlinx-serialization-json'] = factory(typeof globalThis['kotlinx-serialization-kotlinx-serialization-json'] === 'undefined' ? {} : globalThis['kotlinx-serialization-kotlinx-serialization-json'], globalThis['kotlinx-serialization-kotlinx-serialization-core'], globalThis['kotlin-kotlin-stdlib']);
  }
}(function (_, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c2;
  var protoOf = kotlin_kotlin.$_$.ia;
  var initMetadataForObject = kotlin_kotlin.$_$.n9;
  var VOID = kotlin_kotlin.$_$.e;
  var Unit_instance = kotlin_kotlin.$_$.k4;
  var initMetadataForClass = kotlin_kotlin.$_$.i9;
  var toString = kotlin_kotlin.$_$.ma;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.j1;
  var charSequenceLength = kotlin_kotlin.$_$.w8;
  var charSequenceGet = kotlin_kotlin.$_$.v8;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.y1;
  var equals = kotlin_kotlin.$_$.b9;
  var toString_0 = kotlin_kotlin.$_$.pe;
  var Enum = kotlin_kotlin.$_$.bd;
  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var initMetadataForInterface = kotlin_kotlin.$_$.l9;
  var initMetadataForCompanion = kotlin_kotlin.$_$.j9;
  var THROW_CCE = kotlin_kotlin.$_$.md;
  var hashCode = kotlin_kotlin.$_$.h9;
  var joinToString = kotlin_kotlin.$_$.k6;
  var KtList = kotlin_kotlin.$_$.r4;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.y;
  var KtMap = kotlin_kotlin.$_$.t4;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.f;
  var lazy = kotlin_kotlin.$_$.he;
  var SerializerFactory = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
  var NumberFormatException_init_$Create$ = kotlin_kotlin.$_$.q1;
  var toDouble = kotlin_kotlin.$_$.ic;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var numberRangeToNumber = kotlin_kotlin.$_$.ca;
  var ClosedRange = kotlin_kotlin.$_$.pa;
  var isInterface = kotlin_kotlin.$_$.w9;
  var contains = kotlin_kotlin.$_$.ta;
  var getKClassFromExpression = kotlin_kotlin.$_$.c;
  var getBooleanHashCode = kotlin_kotlin.$_$.e9;
  var getStringHashCode = kotlin_kotlin.$_$.g9;
  var StringCompanionObject_instance = kotlin_kotlin.$_$.y3;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
  var InlinePrimitiveDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
  var buildSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.je;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j2;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
  var toLongOrNull = kotlin_kotlin.$_$.mc;
  var toULongOrNull = kotlin_kotlin.$_$.pc;
  var ULong = kotlin_kotlin.$_$.ud;
  var Companion_getInstance = kotlin_kotlin.$_$.i4;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.z2;
  var toDoubleOrNull = kotlin_kotlin.$_$.hc;
  var toBooleanStrictOrNull = kotlin_kotlin.$_$.fc;
  var lazy_0 = kotlin_kotlin.$_$.ie;
  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
  var get_annotations = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
  var KProperty1 = kotlin_kotlin.$_$.ab;
  var getPropertyCallableRef = kotlin_kotlin.$_$.f9;
  var Encoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var CompositeEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var toLong = kotlin_kotlin.$_$.ka;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.p2;
  var UInt__toString_impl_dbgl21 = kotlin_kotlin.$_$.r2;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.y2;
  var ULong__toString_impl_f9au7k = kotlin_kotlin.$_$.a3;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.g2;
  var UByte__toString_impl_v72jg = kotlin_kotlin.$_$.i2;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.h3;
  var UShort__toString_impl_edaoee = kotlin_kotlin.$_$.j3;
  var ElementMarker = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var captureStack = kotlin_kotlin.$_$.t8;
  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m2;
  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var charSequenceSubSequence = kotlin_kotlin.$_$.x8;
  var coerceAtLeast = kotlin_kotlin.$_$.ra;
  var coerceAtMost = kotlin_kotlin.$_$.sa;
  var SerializationException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var CLASS_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.q;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.i;
  var singleOrNull = kotlin_kotlin.$_$.d7;
  var emptyMap = kotlin_kotlin.$_$.z5;
  var getValue = kotlin_kotlin.$_$.f6;
  var fillArrayVal = kotlin_kotlin.$_$.c9;
  var copyOf = kotlin_kotlin.$_$.t5;
  var copyOf_0 = kotlin_kotlin.$_$.u5;
  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var DeepRecursiveFunction = kotlin_kotlin.$_$.zc;
  var invoke = kotlin_kotlin.$_$.ee;
  var CoroutineImpl = kotlin_kotlin.$_$.l8;
  var DeepRecursiveScope = kotlin_kotlin.$_$.ad;
  var Unit = kotlin_kotlin.$_$.xd;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.w7;
  var initMetadataForLambda = kotlin_kotlin.$_$.m9;
  var initMetadataForCoroutine = kotlin_kotlin.$_$.k9;
  var SealedClassSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l2;
  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
  var ENUM = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
  var CONTEXTUAL_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var contextual = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f2;
  var SerializersModuleCollector = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g2;
  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i2;
  var getKClass = kotlin_kotlin.$_$.d;
  var findPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o2;
  var ensureNotNull = kotlin_kotlin.$_$.de;
  var substringBefore = kotlin_kotlin.$_$.dc;
  var removeSuffix = kotlin_kotlin.$_$.vb;
  var substringAfter = kotlin_kotlin.$_$.cc;
  var contains_0 = kotlin_kotlin.$_$.fb;
  var plus = kotlin_kotlin.$_$.ke;
  var MissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k2;
  var IllegalArgumentException = kotlin_kotlin.$_$.ed;
  var isFinite = kotlin_kotlin.$_$.ge;
  var isFinite_0 = kotlin_kotlin.$_$.fe;
  var toUInt = kotlin_kotlin.$_$.oc;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.q2;
  var toULong = kotlin_kotlin.$_$.qc;
  var toUByte = kotlin_kotlin.$_$.nc;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.h2;
  var toUShort = kotlin_kotlin.$_$.rc;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.i3;
  var objectCreate = kotlin_kotlin.$_$.ha;
  var AbstractEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
  var OBJECT_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var findPolymorphicSerializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p2;
  var SerializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n2;
  var toString_1 = kotlin_kotlin.$_$.b2;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.h4;
  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.g4;
  var serializer_2 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
  var Companion_getInstance_2 = kotlin_kotlin.$_$.j4;
  var serializer_3 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
  var setOf = kotlin_kotlin.$_$.c7;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.a2;
  var numberToChar = kotlin_kotlin.$_$.ea;
  var equals_0 = kotlin_kotlin.$_$.kb;
  var startsWith = kotlin_kotlin.$_$.ac;
  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
  var toByte = kotlin_kotlin.$_$.ja;
  var toShort = kotlin_kotlin.$_$.la;
  var single = kotlin_kotlin.$_$.yb;
  var Char = kotlin_kotlin.$_$.wc;
  var emptySet = kotlin_kotlin.$_$.a6;
  var plus_0 = kotlin_kotlin.$_$.x6;
  var toInt = kotlin_kotlin.$_$.lc;
  var toList = kotlin_kotlin.$_$.k7;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.me;
  var NamedValueEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var enumEntries = kotlin_kotlin.$_$.n8;
  var getContextualDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var last = kotlin_kotlin.$_$.p6;
  var removeLast = kotlin_kotlin.$_$.b7;
  var lastIndexOf = kotlin_kotlin.$_$.sb;
  var Long = kotlin_kotlin.$_$.gd;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.z1;
  var numberToLong = kotlin_kotlin.$_$.ga;
  var charArray = kotlin_kotlin.$_$.u8;
  var indexOf = kotlin_kotlin.$_$.mb;
  var indexOf_0 = kotlin_kotlin.$_$.nb;
  var StringBuilder_init_$Create$_0 = kotlin_kotlin.$_$.x;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.k;
  //endregion
  //region block: pre-declaration
  initMetadataForClass(Json, 'Json');
  initMetadataForObject(Default, 'Default', VOID, Json);
  initMetadataForClass(JsonBuilder, 'JsonBuilder');
  initMetadataForClass(JsonImpl, 'JsonImpl', VOID, Json);
  initMetadataForClass(JsonClassDiscriminator, 'JsonClassDiscriminator');
  initMetadataForClass(JsonNames, 'JsonNames');
  initMetadataForClass(JsonConfiguration, 'JsonConfiguration');
  initMetadataForClass(ClassDiscriminatorMode, 'ClassDiscriminatorMode', VOID, Enum);
  initMetadataForInterface(JsonDecoder, 'JsonDecoder', VOID, VOID, [Decoder, CompositeDecoder]);
  initMetadataForCompanion(Companion);
  initMetadataForClass(JsonElement, 'JsonElement', VOID, VOID, VOID, VOID, VOID, {0: JsonElementSerializer_getInstance});
  initMetadataForCompanion(Companion_0);
  initMetadataForClass(JsonPrimitive, 'JsonPrimitive', VOID, JsonElement, VOID, VOID, VOID, {0: JsonPrimitiveSerializer_getInstance});
  initMetadataForCompanion(Companion_1);
  initMetadataForClass(JsonArray, 'JsonArray', VOID, JsonElement, [JsonElement, KtList], VOID, VOID, {0: JsonArraySerializer_getInstance});
  initMetadataForCompanion(Companion_2);
  initMetadataForClass(JsonObject, 'JsonObject', VOID, JsonElement, [JsonElement, KtMap], VOID, VOID, {0: JsonObjectSerializer_getInstance});
  initMetadataForObject(JsonNull, 'JsonNull', VOID, JsonPrimitive, [JsonPrimitive, SerializerFactory], VOID, VOID, {0: JsonNull_getInstance});
  initMetadataForClass(JsonLiteral, 'JsonLiteral', VOID, JsonPrimitive);
  initMetadataForObject(JsonElementSerializer, 'JsonElementSerializer', VOID, VOID, [KSerializer]);
  initMetadataForObject(JsonObjectDescriptor, 'JsonObjectDescriptor', VOID, VOID, [SerialDescriptor]);
  initMetadataForObject(JsonObjectSerializer, 'JsonObjectSerializer', VOID, VOID, [KSerializer]);
  initMetadataForObject(JsonPrimitiveSerializer, 'JsonPrimitiveSerializer', VOID, VOID, [KSerializer]);
  initMetadataForObject(JsonArrayDescriptor, 'JsonArrayDescriptor', VOID, VOID, [SerialDescriptor]);
  initMetadataForObject(JsonArraySerializer, 'JsonArraySerializer', VOID, VOID, [KSerializer]);
  initMetadataForObject(JsonNullSerializer, 'JsonNullSerializer', VOID, VOID, [KSerializer]);
  initMetadataForObject(JsonLiteralSerializer, 'JsonLiteralSerializer', VOID, VOID, [KSerializer]);
  initMetadataForClass(defer$1, VOID, VOID, VOID, [SerialDescriptor]);
  initMetadataForInterface(JsonEncoder, 'JsonEncoder', VOID, VOID, [Encoder, CompositeEncoder]);
  initMetadataForClass(Composer, 'Composer');
  initMetadataForClass(ComposerForUnsignedNumbers, 'ComposerForUnsignedNumbers', VOID, Composer);
  initMetadataForClass(ComposerForUnquotedLiterals, 'ComposerForUnquotedLiterals', VOID, Composer);
  initMetadataForClass(ComposerWithPrettyPrint, 'ComposerWithPrettyPrint', VOID, Composer);
  initMetadataForClass(JsonElementMarker, 'JsonElementMarker');
  initMetadataForClass(JsonException, 'JsonException', VOID, SerializationException);
  initMetadataForClass(JsonDecodingException, 'JsonDecodingException', VOID, JsonException);
  initMetadataForClass(JsonEncodingException, 'JsonEncodingException', VOID, JsonException);
  initMetadataForObject(Tombstone, 'Tombstone');
  initMetadataForClass(JsonPath, 'JsonPath', JsonPath);
  initMetadataForLambda(JsonTreeReader$readDeepRecursive$slambda, CoroutineImpl, VOID, [2]);
  initMetadataForCoroutine($readObjectCOROUTINE$0, CoroutineImpl);
  initMetadataForClass(JsonTreeReader, 'JsonTreeReader', VOID, VOID, VOID, [0]);
  initMetadataForClass(PolymorphismValidator, 'PolymorphismValidator', VOID, VOID, [SerializersModuleCollector]);
  initMetadataForClass(Key, 'Key', Key);
  initMetadataForClass(DescriptorSchemaCache, 'DescriptorSchemaCache', DescriptorSchemaCache);
  initMetadataForClass(DiscriminatorHolder, 'DiscriminatorHolder');
  initMetadataForClass(StreamingJsonDecoder, 'StreamingJsonDecoder', VOID, AbstractDecoder, [JsonDecoder, AbstractDecoder]);
  initMetadataForClass(JsonDecoderForUnsignedTypes, 'JsonDecoderForUnsignedTypes', VOID, AbstractDecoder);
  initMetadataForClass(StreamingJsonEncoder, 'StreamingJsonEncoder', VOID, AbstractEncoder, [JsonEncoder, AbstractEncoder]);
  initMetadataForClass(AbstractJsonTreeDecoder, 'AbstractJsonTreeDecoder', VOID, NamedValueDecoder, [NamedValueDecoder, JsonDecoder]);
  initMetadataForClass(JsonTreeDecoder, 'JsonTreeDecoder', VOID, AbstractJsonTreeDecoder);
  initMetadataForClass(JsonTreeListDecoder, 'JsonTreeListDecoder', VOID, AbstractJsonTreeDecoder);
  initMetadataForClass(JsonPrimitiveDecoder, 'JsonPrimitiveDecoder', VOID, AbstractJsonTreeDecoder);
  initMetadataForClass(JsonTreeMapDecoder, 'JsonTreeMapDecoder', VOID, JsonTreeDecoder);
  initMetadataForClass(AbstractJsonTreeEncoder, 'AbstractJsonTreeEncoder', VOID, NamedValueEncoder, [NamedValueEncoder, JsonEncoder]);
  initMetadataForClass(JsonTreeEncoder, 'JsonTreeEncoder', VOID, AbstractJsonTreeEncoder);
  initMetadataForClass(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1, VOID, VOID, AbstractEncoder);
  initMetadataForClass(AbstractJsonTreeEncoder$inlineUnquotedLiteralEncoder$1, VOID, VOID, AbstractEncoder);
  initMetadataForClass(JsonPrimitiveEncoder, 'JsonPrimitiveEncoder', VOID, AbstractJsonTreeEncoder);
  initMetadataForClass(JsonTreeListEncoder, 'JsonTreeListEncoder', VOID, AbstractJsonTreeEncoder);
  initMetadataForClass(JsonTreeMapEncoder, 'JsonTreeMapEncoder', VOID, JsonTreeEncoder);
  initMetadataForClass(WriteMode, 'WriteMode', VOID, Enum);
  initMetadataForClass(AbstractJsonLexer, 'AbstractJsonLexer');
  initMetadataForObject(CharMappings, 'CharMappings');
  initMetadataForClass(StringJsonLexer, 'StringJsonLexer', VOID, AbstractJsonLexer);
  initMetadataForClass(StringJsonLexerWithComments, 'StringJsonLexerWithComments', VOID, StringJsonLexer);
  initMetadataForClass(JsonToStringWriter, 'JsonToStringWriter', JsonToStringWriter);
  //endregion
  function Default() {
    Default_instance = this;
    Json.call(this, new JsonConfiguration(), EmptySerializersModule());
  }
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration, serializersModule) {
    Default_getInstance();
    this.h1n_1 = configuration;
    this.i1n_1 = serializersModule;
    this.j1n_1 = new DescriptorSchemaCache();
  }
  protoOf(Json).sl = function () {
    return this.i1n_1;
  };
  protoOf(Json).k1n = function (serializer, value) {
    var result = new JsonToStringWriter();
    try {
      encodeByWriter(this, result, serializer, value);
      return result.toString();
    }finally {
      result.p1n();
    }
  };
  protoOf(Json).l1n = function (deserializer, string) {
    var lexer = StringJsonLexer_0(this, string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), lexer, deserializer.hl(), null);
    var result = input.wl(deserializer);
    lexer.c1o();
    return result;
  };
  protoOf(Json).m1n = function (serializer, value) {
    return writeJson(this, value, serializer);
  };
  protoOf(Json).n1n = function (string) {
    return this.l1n(JsonElementSerializer_getInstance(), string);
  };
  function Json_0(from, builderAction) {
    from = from === VOID ? Default_getInstance() : from;
    var builder = new JsonBuilder(from);
    builderAction(builder);
    var conf = builder.v1o();
    return new JsonImpl(conf, builder.u1o_1);
  }
  function JsonBuilder(json) {
    this.d1o_1 = json.h1n_1.w1o_1;
    this.e1o_1 = json.h1n_1.b1p_1;
    this.f1o_1 = json.h1n_1.x1o_1;
    this.g1o_1 = json.h1n_1.y1o_1;
    this.h1o_1 = json.h1n_1.a1p_1;
    this.i1o_1 = json.h1n_1.c1p_1;
    this.j1o_1 = json.h1n_1.d1p_1;
    this.k1o_1 = json.h1n_1.f1p_1;
    this.l1o_1 = json.h1n_1.m1p_1;
    this.m1o_1 = json.h1n_1.h1p_1;
    this.n1o_1 = json.h1n_1.i1p_1;
    this.o1o_1 = json.h1n_1.j1p_1;
    this.p1o_1 = json.h1n_1.k1p_1;
    this.q1o_1 = json.h1n_1.l1p_1;
    this.r1o_1 = json.h1n_1.g1p_1;
    this.s1o_1 = json.h1n_1.z1o_1;
    this.t1o_1 = json.h1n_1.e1p_1;
    this.u1o_1 = json.sl();
  }
  protoOf(JsonBuilder).v1o = function () {
    if (this.t1o_1) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(this.k1o_1 === 'type')) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message = 'Class discriminator should not be specified when array polymorphism is specified';
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.l1o_1.equals(ClassDiscriminatorMode_POLYMORPHIC_getInstance())) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message_0 = 'useArrayPolymorphism option can only be used if classDiscriminatorMode in a default POLYMORPHIC state.';
        throw IllegalArgumentException_init_$Create$(toString(message_0));
      }
    }
    if (!this.h1o_1) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(this.i1o_1 === '    ')) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message_1 = 'Indent should not be specified when default printing mode is used';
        throw IllegalArgumentException_init_$Create$(toString(message_1));
      }
    } else if (!(this.i1o_1 === '    ')) {
      var tmp$ret$4;
      $l$block: {
        // Inline function 'kotlin.text.all' call
        var indexedObject = this.i1o_1;
        var inductionVariable = 0;
        while (inductionVariable < charSequenceLength(indexedObject)) {
          var element = charSequenceGet(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
          if (!(element === _Char___init__impl__6a9atx(32) || element === _Char___init__impl__6a9atx(9) || element === _Char___init__impl__6a9atx(13) || element === _Char___init__impl__6a9atx(10))) {
            tmp$ret$4 = false;
            break $l$block;
          }
        }
        tmp$ret$4 = true;
      }
      var allWhitespaces = tmp$ret$4;
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!allWhitespaces) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message_2 = 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this.i1o_1;
        throw IllegalArgumentException_init_$Create$(toString(message_2));
      }
    }
    return new JsonConfiguration(this.d1o_1, this.f1o_1, this.g1o_1, this.s1o_1, this.h1o_1, this.e1o_1, this.i1o_1, this.j1o_1, this.t1o_1, this.k1o_1, this.r1o_1, this.m1o_1, this.n1o_1, this.o1o_1, this.p1o_1, this.q1o_1, this.l1o_1);
  };
  function validateConfiguration($this) {
    if (equals($this.sl(), EmptySerializersModule()))
      return Unit_instance;
    var collector = new PolymorphismValidator($this.h1n_1.e1p_1, $this.h1n_1.f1p_1);
    $this.sl().w15(collector);
  }
  function JsonImpl(configuration, module_0) {
    Json.call(this, configuration, module_0);
    validateConfiguration(this);
  }
  function JsonClassDiscriminator() {
  }
  function JsonNames() {
  }
  function JsonConfiguration(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy, decodeEnumsCaseInsensitive, allowTrailingComma, allowComments, classDiscriminatorMode) {
    encodeDefaults = encodeDefaults === VOID ? false : encodeDefaults;
    ignoreUnknownKeys = ignoreUnknownKeys === VOID ? false : ignoreUnknownKeys;
    isLenient = isLenient === VOID ? false : isLenient;
    allowStructuredMapKeys = allowStructuredMapKeys === VOID ? false : allowStructuredMapKeys;
    prettyPrint = prettyPrint === VOID ? false : prettyPrint;
    explicitNulls = explicitNulls === VOID ? true : explicitNulls;
    prettyPrintIndent = prettyPrintIndent === VOID ? '    ' : prettyPrintIndent;
    coerceInputValues = coerceInputValues === VOID ? false : coerceInputValues;
    useArrayPolymorphism = useArrayPolymorphism === VOID ? false : useArrayPolymorphism;
    classDiscriminator = classDiscriminator === VOID ? 'type' : classDiscriminator;
    allowSpecialFloatingPointValues = allowSpecialFloatingPointValues === VOID ? false : allowSpecialFloatingPointValues;
    useAlternativeNames = useAlternativeNames === VOID ? true : useAlternativeNames;
    namingStrategy = namingStrategy === VOID ? null : namingStrategy;
    decodeEnumsCaseInsensitive = decodeEnumsCaseInsensitive === VOID ? false : decodeEnumsCaseInsensitive;
    allowTrailingComma = allowTrailingComma === VOID ? false : allowTrailingComma;
    allowComments = allowComments === VOID ? false : allowComments;
    classDiscriminatorMode = classDiscriminatorMode === VOID ? ClassDiscriminatorMode_POLYMORPHIC_getInstance() : classDiscriminatorMode;
    this.w1o_1 = encodeDefaults;
    this.x1o_1 = ignoreUnknownKeys;
    this.y1o_1 = isLenient;
    this.z1o_1 = allowStructuredMapKeys;
    this.a1p_1 = prettyPrint;
    this.b1p_1 = explicitNulls;
    this.c1p_1 = prettyPrintIndent;
    this.d1p_1 = coerceInputValues;
    this.e1p_1 = useArrayPolymorphism;
    this.f1p_1 = classDiscriminator;
    this.g1p_1 = allowSpecialFloatingPointValues;
    this.h1p_1 = useAlternativeNames;
    this.i1p_1 = namingStrategy;
    this.j1p_1 = decodeEnumsCaseInsensitive;
    this.k1p_1 = allowTrailingComma;
    this.l1p_1 = allowComments;
    this.m1p_1 = classDiscriminatorMode;
  }
  protoOf(JsonConfiguration).toString = function () {
    return 'JsonConfiguration(encodeDefaults=' + this.w1o_1 + ', ignoreUnknownKeys=' + this.x1o_1 + ', isLenient=' + this.y1o_1 + ', ' + ('allowStructuredMapKeys=' + this.z1o_1 + ', prettyPrint=' + this.a1p_1 + ', explicitNulls=' + this.b1p_1 + ', ') + ("prettyPrintIndent='" + this.c1p_1 + "', coerceInputValues=" + this.d1p_1 + ', useArrayPolymorphism=' + this.e1p_1 + ', ') + ("classDiscriminator='" + this.f1p_1 + "', allowSpecialFloatingPointValues=" + this.g1p_1 + ', ') + ('useAlternativeNames=' + this.h1p_1 + ', namingStrategy=' + toString_0(this.i1p_1) + ', decodeEnumsCaseInsensitive=' + this.j1p_1 + ', ') + ('allowTrailingComma=' + this.k1p_1 + ', allowComments=' + this.l1p_1 + ', classDiscriminatorMode=' + this.m1p_1.toString() + ')');
  };
  var ClassDiscriminatorMode_NONE_instance;
  var ClassDiscriminatorMode_ALL_JSON_OBJECTS_instance;
  var ClassDiscriminatorMode_POLYMORPHIC_instance;
  var ClassDiscriminatorMode_entriesInitialized;
  function ClassDiscriminatorMode_initEntries() {
    if (ClassDiscriminatorMode_entriesInitialized)
      return Unit_instance;
    ClassDiscriminatorMode_entriesInitialized = true;
    ClassDiscriminatorMode_NONE_instance = new ClassDiscriminatorMode('NONE', 0);
    ClassDiscriminatorMode_ALL_JSON_OBJECTS_instance = new ClassDiscriminatorMode('ALL_JSON_OBJECTS', 1);
    ClassDiscriminatorMode_POLYMORPHIC_instance = new ClassDiscriminatorMode('POLYMORPHIC', 2);
  }
  function ClassDiscriminatorMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function ClassDiscriminatorMode_NONE_getInstance() {
    ClassDiscriminatorMode_initEntries();
    return ClassDiscriminatorMode_NONE_instance;
  }
  function ClassDiscriminatorMode_POLYMORPHIC_getInstance() {
    ClassDiscriminatorMode_initEntries();
    return ClassDiscriminatorMode_POLYMORPHIC_instance;
  }
  function JsonDecoder() {
  }
  function get_jsonUnquotedLiteralDescriptor() {
    _init_properties_JsonElement_kt__7cbdc2();
    return jsonUnquotedLiteralDescriptor;
  }
  var jsonUnquotedLiteralDescriptor;
  function Companion() {
  }
  var Companion_instance;
  function Companion_getInstance_3() {
    return Companion_instance;
  }
  function JsonElement() {
  }
  function Companion_0() {
  }
  var Companion_instance_0;
  function Companion_getInstance_4() {
    return Companion_instance_0;
  }
  function JsonPrimitive() {
    JsonElement.call(this);
  }
  protoOf(JsonPrimitive).toString = function () {
    return this.q1p();
  };
  function get_jsonPrimitive(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function Companion_1() {
  }
  var Companion_instance_1;
  function Companion_getInstance_5() {
    return Companion_instance_1;
  }
  function JsonArray(content) {
    JsonElement.call(this);
    this.r1p_1 = content;
  }
  protoOf(JsonArray).asJsReadonlyArrayView = function () {
    return this.r1p_1.asJsReadonlyArrayView();
  };
  protoOf(JsonArray).s1p = function (element) {
    return this.r1p_1.w1(element);
  };
  protoOf(JsonArray).w1 = function (element) {
    if (!(element instanceof JsonElement))
      return false;
    return this.s1p(element instanceof JsonElement ? element : THROW_CCE());
  };
  protoOf(JsonArray).t1p = function (elements) {
    return this.r1p_1.x1(elements);
  };
  protoOf(JsonArray).x1 = function (elements) {
    return this.t1p(elements);
  };
  protoOf(JsonArray).r = function (index) {
    return this.r1p_1.r(index);
  };
  protoOf(JsonArray).u1p = function (element) {
    return this.r1p_1.y1(element);
  };
  protoOf(JsonArray).y1 = function (element) {
    if (!(element instanceof JsonElement))
      return -1;
    return this.u1p(element instanceof JsonElement ? element : THROW_CCE());
  };
  protoOf(JsonArray).i = function () {
    return this.r1p_1.i();
  };
  protoOf(JsonArray).n = function () {
    return this.r1p_1.n();
  };
  protoOf(JsonArray).v1p = function (element) {
    return this.r1p_1.z1(element);
  };
  protoOf(JsonArray).z1 = function (element) {
    if (!(element instanceof JsonElement))
      return -1;
    return this.v1p(element instanceof JsonElement ? element : THROW_CCE());
  };
  protoOf(JsonArray).a2 = function () {
    return this.r1p_1.a2();
  };
  protoOf(JsonArray).w = function (index) {
    return this.r1p_1.w(index);
  };
  protoOf(JsonArray).b2 = function (fromIndex, toIndex) {
    return this.r1p_1.b2(fromIndex, toIndex);
  };
  protoOf(JsonArray).q = function () {
    return this.r1p_1.q();
  };
  protoOf(JsonArray).equals = function (other) {
    return equals(this.r1p_1, other);
  };
  protoOf(JsonArray).hashCode = function () {
    return hashCode(this.r1p_1);
  };
  protoOf(JsonArray).toString = function () {
    return joinToString(this.r1p_1, ',', '[', ']');
  };
  function get_jsonArray(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonArray ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonArray');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function Companion_2() {
  }
  var Companion_instance_2;
  function Companion_getInstance_6() {
    return Companion_instance_2;
  }
  function JsonObject$toString$lambda(_destruct__k2r9zo) {
    // Inline function 'kotlin.collections.component1' call
    var k = _destruct__k2r9zo.c2();
    // Inline function 'kotlin.collections.component2' call
    var v = _destruct__k2r9zo.d2();
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.JsonObject.toString.<anonymous>.<anonymous>' call
    printQuoted(this_0, k);
    this_0.t8(_Char___init__impl__6a9atx(58));
    this_0.r8(v);
    return this_0.toString();
  }
  function JsonObject(content) {
    JsonElement.call(this);
    this.w1p_1 = content;
  }
  protoOf(JsonObject).asJsReadonlyMapView = function () {
    return this.w1p_1.asJsReadonlyMapView();
  };
  protoOf(JsonObject).x1p = function (key) {
    return this.w1p_1.e2(key);
  };
  protoOf(JsonObject).e2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.x1p((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  protoOf(JsonObject).y1p = function (value) {
    return this.w1p_1.f2(value);
  };
  protoOf(JsonObject).f2 = function (value) {
    if (!(value instanceof JsonElement))
      return false;
    return this.y1p(value instanceof JsonElement ? value : THROW_CCE());
  };
  protoOf(JsonObject).z1p = function (key) {
    return this.w1p_1.g2(key);
  };
  protoOf(JsonObject).g2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.z1p((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  protoOf(JsonObject).i = function () {
    return this.w1p_1.i();
  };
  protoOf(JsonObject).y = function () {
    return this.w1p_1.y();
  };
  protoOf(JsonObject).h2 = function () {
    return this.w1p_1.h2();
  };
  protoOf(JsonObject).q = function () {
    return this.w1p_1.q();
  };
  protoOf(JsonObject).i2 = function () {
    return this.w1p_1.i2();
  };
  protoOf(JsonObject).equals = function (other) {
    return equals(this.w1p_1, other);
  };
  protoOf(JsonObject).hashCode = function () {
    return hashCode(this.w1p_1);
  };
  protoOf(JsonObject).toString = function () {
    var tmp = this.w1p_1.y();
    return joinToString(tmp, ',', '{', '}', VOID, VOID, JsonObject$toString$lambda);
  };
  function get_jsonObject(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonObject ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonObject');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _get_$cachedSerializer__te6jhj($this) {
    return $this.b1q_1.d2();
  }
  function JsonNull$_anonymous__enib48() {
    return JsonNullSerializer_getInstance();
  }
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this.a1q_1 = 'null';
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.b1q_1 = lazy(tmp_0, JsonNull$_anonymous__enib48);
  }
  protoOf(JsonNull).p1p = function () {
    return false;
  };
  protoOf(JsonNull).q1p = function () {
    return this.a1q_1;
  };
  protoOf(JsonNull).c1q = function () {
    return _get_$cachedSerializer__te6jhj(this);
  };
  protoOf(JsonNull).vw = function (typeParamsSerializers) {
    return this.c1q();
  };
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function get_long(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    // Inline function 'kotlinx.serialization.json.mapExceptions' call
    var tmp;
    try {
      // Inline function 'kotlinx.serialization.json.<get-long>.<anonymous>' call
      tmp = (new StringJsonLexer(_this__u8e3s4.q1p())).d1q();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof JsonDecodingException) {
        var e = $p;
        throw NumberFormatException_init_$Create$(e.message);
      } else {
        throw $p;
      }
    }
    return tmp;
  }
  function get_float(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    // Inline function 'kotlin.text.toFloat' call
    var this_0 = _this__u8e3s4.q1p();
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return toDouble(this_0);
  }
  function get_double(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    return toDouble(_this__u8e3s4.q1p());
  }
  function get_boolean(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    var tmp0_elvis_lhs = toBooleanStrictOrNull_0(_this__u8e3s4.q1p());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$(_this__u8e3s4.toString() + ' does not represent a Boolean');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function JsonPrimitive_0(value) {
    _init_properties_JsonElement_kt__7cbdc2();
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, false);
  }
  function JsonPrimitive_1(value) {
    _init_properties_JsonElement_kt__7cbdc2();
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function JsonPrimitive_2(value) {
    _init_properties_JsonElement_kt__7cbdc2();
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, false);
  }
  function JsonPrimitive_3(value) {
    _init_properties_JsonElement_kt__7cbdc2();
    return JsonNull_getInstance();
  }
  function get_contentOrNull(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    var tmp;
    if (_this__u8e3s4 instanceof JsonNull) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4.q1p();
    }
    return tmp;
  }
  function get_int(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    // Inline function 'kotlinx.serialization.json.mapExceptions' call
    var tmp;
    try {
      // Inline function 'kotlinx.serialization.json.<get-int>.<anonymous>' call
      tmp = (new StringJsonLexer(_this__u8e3s4.q1p())).d1q();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof JsonDecodingException) {
        var e = $p;
        throw NumberFormatException_init_$Create$(e.message);
      } else {
        throw $p;
      }
    }
    var result = tmp;
    // Inline function 'kotlin.ranges.contains' call
    var this_0 = numberRangeToNumber(-2147483648, 2147483647);
    if (!contains(isInterface(this_0, ClosedRange) ? this_0 : THROW_CCE(), result))
      throw NumberFormatException_init_$Create$(_this__u8e3s4.q1p() + ' is not an Int');
    return result.i1();
  }
  function error(_this__u8e3s4, element) {
    _init_properties_JsonElement_kt__7cbdc2();
    throw IllegalArgumentException_init_$Create$('Element ' + toString(getKClassFromExpression(_this__u8e3s4)) + ' is not a ' + element);
  }
  function JsonLiteral(body, isString, coerceToInlineType) {
    coerceToInlineType = coerceToInlineType === VOID ? null : coerceToInlineType;
    JsonPrimitive.call(this);
    this.e1q_1 = isString;
    this.f1q_1 = coerceToInlineType;
    this.g1q_1 = toString(body);
    if (!(this.f1q_1 == null)) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.f1q_1.vm()) {
        // Inline function 'kotlin.require.<anonymous>' call
        var message = 'Failed requirement.';
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  protoOf(JsonLiteral).p1p = function () {
    return this.e1q_1;
  };
  protoOf(JsonLiteral).q1p = function () {
    return this.g1q_1;
  };
  protoOf(JsonLiteral).toString = function () {
    var tmp;
    if (this.e1q_1) {
      // Inline function 'kotlin.text.buildString' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.apply' call
      var this_0 = StringBuilder_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.JsonLiteral.toString.<anonymous>' call
      printQuoted(this_0, this.g1q_1);
      tmp = this_0.toString();
    } else {
      tmp = this.g1q_1;
    }
    return tmp;
  };
  protoOf(JsonLiteral).equals = function (other) {
    if (this === other)
      return true;
    if (other == null || !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof JsonLiteral))
      THROW_CCE();
    if (!(this.e1q_1 === other.e1q_1))
      return false;
    if (!(this.g1q_1 === other.g1q_1))
      return false;
    return true;
  };
  protoOf(JsonLiteral).hashCode = function () {
    var result = getBooleanHashCode(this.e1q_1);
    result = imul(31, result) + getStringHashCode(this.g1q_1) | 0;
    return result;
  };
  function get_booleanOrNull(_this__u8e3s4) {
    _init_properties_JsonElement_kt__7cbdc2();
    return toBooleanStrictOrNull_0(_this__u8e3s4.q1p());
  }
  var properties_initialized_JsonElement_kt_abxy8s;
  function _init_properties_JsonElement_kt__7cbdc2() {
    if (!properties_initialized_JsonElement_kt_abxy8s) {
      properties_initialized_JsonElement_kt_abxy8s = true;
      jsonUnquotedLiteralDescriptor = InlinePrimitiveDescriptor('kotlinx.serialization.json.JsonUnquotedLiteral', serializer(StringCompanionObject_instance));
    }
  }
  function JsonElementSerializer$descriptor$lambda($this$buildSerialDescriptor) {
    $this$buildSerialDescriptor.am('JsonPrimitive', defer(JsonElementSerializer$descriptor$lambda$lambda));
    $this$buildSerialDescriptor.am('JsonNull', defer(JsonElementSerializer$descriptor$lambda$lambda_0));
    $this$buildSerialDescriptor.am('JsonLiteral', defer(JsonElementSerializer$descriptor$lambda$lambda_1));
    $this$buildSerialDescriptor.am('JsonObject', defer(JsonElementSerializer$descriptor$lambda$lambda_2));
    $this$buildSerialDescriptor.am('JsonArray', defer(JsonElementSerializer$descriptor$lambda$lambda_3));
    return Unit_instance;
  }
  function JsonElementSerializer$descriptor$lambda$lambda() {
    return JsonPrimitiveSerializer_getInstance().h1q_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_0() {
    return JsonNullSerializer_getInstance().i1q_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_1() {
    return JsonLiteralSerializer_getInstance().j1q_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_2() {
    return JsonObjectSerializer_getInstance().k1q_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_3() {
    return JsonArraySerializer_getInstance().l1q_1;
  }
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    tmp.m1q_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda);
  }
  protoOf(JsonElementSerializer).hl = function () {
    return this.m1q_1;
  };
  protoOf(JsonElementSerializer).n1q = function (encoder, value) {
    verify(encoder);
    if (value instanceof JsonPrimitive) {
      encoder.tl(JsonPrimitiveSerializer_getInstance(), value);
    } else {
      if (value instanceof JsonObject) {
        encoder.tl(JsonObjectSerializer_getInstance(), value);
      } else {
        if (value instanceof JsonArray) {
          encoder.tl(JsonArraySerializer_getInstance(), value);
        } else {
          noWhenBranchMatchedException();
        }
      }
    }
  };
  protoOf(JsonElementSerializer).ul = function (encoder, value) {
    return this.n1q(encoder, value instanceof JsonElement ? value : THROW_CCE());
  };
  protoOf(JsonElementSerializer).vl = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.o1p();
  };
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    this.o1q_1 = MapSerializer(serializer(StringCompanionObject_instance), JsonElementSerializer_getInstance()).hl();
    this.p1q_1 = 'kotlinx.serialization.json.JsonObject';
  }
  protoOf(JsonObjectDescriptor).pm = function (index) {
    return this.o1q_1.pm(index);
  };
  protoOf(JsonObjectDescriptor).qm = function (name) {
    return this.o1q_1.qm(name);
  };
  protoOf(JsonObjectDescriptor).rm = function (index) {
    return this.o1q_1.rm(index);
  };
  protoOf(JsonObjectDescriptor).sm = function (index) {
    return this.o1q_1.sm(index);
  };
  protoOf(JsonObjectDescriptor).tm = function (index) {
    return this.o1q_1.tm(index);
  };
  protoOf(JsonObjectDescriptor).um = function () {
    return this.o1q_1.um();
  };
  protoOf(JsonObjectDescriptor).km = function () {
    return this.o1q_1.km();
  };
  protoOf(JsonObjectDescriptor).vm = function () {
    return this.o1q_1.vm();
  };
  protoOf(JsonObjectDescriptor).wm = function () {
    return this.o1q_1.wm();
  };
  protoOf(JsonObjectDescriptor).il = function () {
    return this.o1q_1.il();
  };
  protoOf(JsonObjectDescriptor).om = function () {
    return this.p1q_1;
  };
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this.k1q_1 = JsonObjectDescriptor_getInstance();
  }
  protoOf(JsonObjectSerializer).hl = function () {
    return this.k1q_1;
  };
  protoOf(JsonObjectSerializer).q1q = function (encoder, value) {
    verify(encoder);
    MapSerializer(serializer(StringCompanionObject_instance), JsonElementSerializer_getInstance()).ul(encoder, value);
  };
  protoOf(JsonObjectSerializer).ul = function (encoder, value) {
    return this.q1q(encoder, value instanceof JsonObject ? value : THROW_CCE());
  };
  protoOf(JsonObjectSerializer).vl = function (decoder) {
    verify_0(decoder);
    return new JsonObject(MapSerializer(serializer(StringCompanionObject_instance), JsonElementSerializer_getInstance()).vl(decoder));
  };
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    this.h1q_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonPrimitive', STRING_getInstance(), []);
  }
  protoOf(JsonPrimitiveSerializer).hl = function () {
    return this.h1q_1;
  };
  protoOf(JsonPrimitiveSerializer).r1q = function (encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      encoder.tl(JsonNullSerializer_getInstance(), JsonNull_getInstance());
      tmp = Unit_instance;
    } else {
      var tmp_0 = JsonLiteralSerializer_getInstance();
      encoder.tl(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
      tmp = Unit_instance;
    }
    return tmp;
  };
  protoOf(JsonPrimitiveSerializer).ul = function (encoder, value) {
    return this.r1q(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
  };
  protoOf(JsonPrimitiveSerializer).vl = function (decoder) {
    var result = asJsonDecoder(decoder).o1p();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + toString(getKClassFromExpression(result)), toString(result));
    return result;
  };
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    this.s1q_1 = ListSerializer(JsonElementSerializer_getInstance()).hl();
    this.t1q_1 = 'kotlinx.serialization.json.JsonArray';
  }
  protoOf(JsonArrayDescriptor).pm = function (index) {
    return this.s1q_1.pm(index);
  };
  protoOf(JsonArrayDescriptor).qm = function (name) {
    return this.s1q_1.qm(name);
  };
  protoOf(JsonArrayDescriptor).rm = function (index) {
    return this.s1q_1.rm(index);
  };
  protoOf(JsonArrayDescriptor).sm = function (index) {
    return this.s1q_1.sm(index);
  };
  protoOf(JsonArrayDescriptor).tm = function (index) {
    return this.s1q_1.tm(index);
  };
  protoOf(JsonArrayDescriptor).um = function () {
    return this.s1q_1.um();
  };
  protoOf(JsonArrayDescriptor).km = function () {
    return this.s1q_1.km();
  };
  protoOf(JsonArrayDescriptor).vm = function () {
    return this.s1q_1.vm();
  };
  protoOf(JsonArrayDescriptor).wm = function () {
    return this.s1q_1.wm();
  };
  protoOf(JsonArrayDescriptor).il = function () {
    return this.s1q_1.il();
  };
  protoOf(JsonArrayDescriptor).om = function () {
    return this.t1q_1;
  };
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this.l1q_1 = JsonArrayDescriptor_getInstance();
  }
  protoOf(JsonArraySerializer).hl = function () {
    return this.l1q_1;
  };
  protoOf(JsonArraySerializer).u1q = function (encoder, value) {
    verify(encoder);
    ListSerializer(JsonElementSerializer_getInstance()).ul(encoder, value);
  };
  protoOf(JsonArraySerializer).ul = function (encoder, value) {
    return this.u1q(encoder, value instanceof JsonArray ? value : THROW_CCE());
  };
  protoOf(JsonArraySerializer).vl = function (decoder) {
    verify_0(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).vl(decoder));
  };
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    this.i1q_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonNull', ENUM_getInstance(), []);
  }
  protoOf(JsonNullSerializer).hl = function () {
    return this.i1q_1;
  };
  protoOf(JsonNullSerializer).v1q = function (encoder, value) {
    verify(encoder);
    encoder.dp();
  };
  protoOf(JsonNullSerializer).ul = function (encoder, value) {
    return this.v1q(encoder, value instanceof JsonNull ? value : THROW_CCE());
  };
  protoOf(JsonNullSerializer).vl = function (decoder) {
    verify_0(decoder);
    if (decoder.vn()) {
      throw new JsonDecodingException("Expected 'null' literal");
    }
    decoder.wn();
    return JsonNull_getInstance();
  };
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function defer(deferred) {
    return new defer$1(deferred);
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this.j1q_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  protoOf(JsonLiteralSerializer).hl = function () {
    return this.j1q_1;
  };
  protoOf(JsonLiteralSerializer).w1q = function (encoder, value) {
    verify(encoder);
    if (value.e1q_1) {
      return encoder.mp(value.g1q_1);
    }
    if (!(value.f1q_1 == null)) {
      return encoder.op(value.f1q_1).mp(value.g1q_1);
    }
    var tmp2_safe_receiver = toLongOrNull(value.g1q_1);
    if (tmp2_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.ip(tmp2_safe_receiver);
    }
    var tmp3_safe_receiver = toULongOrNull(value.g1q_1);
    var tmp = tmp3_safe_receiver;
    if ((tmp == null ? null : new ULong(tmp)) == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      var tmp_0 = tmp3_safe_receiver;
      // Inline function 'kotlin.contracts.contract' call
      var it = (tmp_0 == null ? null : new ULong(tmp_0)).ik_1;
      var tmp_1 = encoder.op(serializer_0(Companion_getInstance()).hl());
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$1 = _ULong___get_data__impl__fggpzb(it);
      tmp_1.ip(tmp$ret$1);
      return Unit_instance;
    }
    var tmp4_safe_receiver = toDoubleOrNull(value.g1q_1);
    if (tmp4_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.kp(tmp4_safe_receiver);
    }
    var tmp5_safe_receiver = toBooleanStrictOrNull(value.g1q_1);
    if (tmp5_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.ep(tmp5_safe_receiver);
    }
    encoder.mp(value.g1q_1);
  };
  protoOf(JsonLiteralSerializer).ul = function (encoder, value) {
    return this.w1q(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
  };
  protoOf(JsonLiteralSerializer).vl = function (decoder) {
    var result = asJsonDecoder(decoder).o1p();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + toString(getKClassFromExpression(result)), toString(result));
    return result;
  };
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function verify(encoder) {
    asJsonEncoder(encoder);
  }
  function asJsonDecoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + toString(getKClassFromExpression(_this__u8e3s4))));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function verify_0(decoder) {
    asJsonDecoder(decoder);
  }
  function asJsonEncoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + toString(getKClassFromExpression(_this__u8e3s4))));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function _get_original__l7ku1m($this) {
    // Inline function 'kotlin.getValue' call
    var this_0 = $this.x1q_1;
    original$factory();
    return this_0.d2();
  }
  function defer$1($deferred) {
    this.x1q_1 = lazy_0($deferred);
  }
  protoOf(defer$1).om = function () {
    return _get_original__l7ku1m(this).om();
  };
  protoOf(defer$1).um = function () {
    return _get_original__l7ku1m(this).um();
  };
  protoOf(defer$1).wm = function () {
    return _get_original__l7ku1m(this).wm();
  };
  protoOf(defer$1).pm = function (index) {
    return _get_original__l7ku1m(this).pm(index);
  };
  protoOf(defer$1).qm = function (name) {
    return _get_original__l7ku1m(this).qm(name);
  };
  protoOf(defer$1).rm = function (index) {
    return _get_original__l7ku1m(this).rm(index);
  };
  protoOf(defer$1).sm = function (index) {
    return _get_original__l7ku1m(this).sm(index);
  };
  protoOf(defer$1).tm = function (index) {
    return _get_original__l7ku1m(this).tm(index);
  };
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original__l7ku1m(receiver);
    }, null);
  }
  function JsonEncoder() {
  }
  function Composer(writer) {
    this.y1q_1 = writer;
    this.z1q_1 = true;
  }
  protoOf(Composer).a1r = function () {
    this.z1q_1 = true;
  };
  protoOf(Composer).b1r = function () {
    return Unit_instance;
  };
  protoOf(Composer).c1r = function () {
    this.z1q_1 = false;
  };
  protoOf(Composer).d1r = function () {
    this.z1q_1 = false;
  };
  protoOf(Composer).e1r = function () {
    return Unit_instance;
  };
  protoOf(Composer).f1r = function (v) {
    return this.y1q_1.g1r(v);
  };
  protoOf(Composer).h1r = function (v) {
    return this.y1q_1.i1r(v);
  };
  protoOf(Composer).j1r = function (v) {
    return this.y1q_1.i1r(v.toString());
  };
  protoOf(Composer).k1r = function (v) {
    return this.y1q_1.i1r(v.toString());
  };
  protoOf(Composer).l1r = function (v) {
    return this.y1q_1.m1r(toLong(v));
  };
  protoOf(Composer).n1r = function (v) {
    return this.y1q_1.m1r(toLong(v));
  };
  protoOf(Composer).o1r = function (v) {
    return this.y1q_1.m1r(toLong(v));
  };
  protoOf(Composer).p1r = function (v) {
    return this.y1q_1.m1r(v);
  };
  protoOf(Composer).q1r = function (v) {
    return this.y1q_1.i1r(v.toString());
  };
  protoOf(Composer).r1r = function (value) {
    return this.y1q_1.s1r(value);
  };
  function Composer_0(sb, json) {
    return json.h1n_1.a1p_1 ? new ComposerWithPrettyPrint(sb, json) : new Composer(sb);
  }
  function ComposerForUnsignedNumbers(writer, forceQuoting) {
    Composer.call(this, writer);
    this.v1r_1 = forceQuoting;
  }
  protoOf(ComposerForUnsignedNumbers).o1r = function (v) {
    if (this.v1r_1) {
      // Inline function 'kotlin.toUInt' call
      var tmp$ret$0 = _UInt___init__impl__l7qpdl(v);
      this.r1r(UInt__toString_impl_dbgl21(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toUInt' call
      var tmp$ret$1 = _UInt___init__impl__l7qpdl(v);
      this.h1r(UInt__toString_impl_dbgl21(tmp$ret$1));
    }
  };
  protoOf(ComposerForUnsignedNumbers).p1r = function (v) {
    if (this.v1r_1) {
      // Inline function 'kotlin.toULong' call
      var tmp$ret$0 = _ULong___init__impl__c78o9k(v);
      this.r1r(ULong__toString_impl_f9au7k(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toULong' call
      var tmp$ret$1 = _ULong___init__impl__c78o9k(v);
      this.h1r(ULong__toString_impl_f9au7k(tmp$ret$1));
    }
  };
  protoOf(ComposerForUnsignedNumbers).l1r = function (v) {
    if (this.v1r_1) {
      // Inline function 'kotlin.toUByte' call
      var tmp$ret$0 = _UByte___init__impl__g9hnc4(v);
      this.r1r(UByte__toString_impl_v72jg(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toUByte' call
      var tmp$ret$1 = _UByte___init__impl__g9hnc4(v);
      this.h1r(UByte__toString_impl_v72jg(tmp$ret$1));
    }
  };
  protoOf(ComposerForUnsignedNumbers).n1r = function (v) {
    if (this.v1r_1) {
      // Inline function 'kotlin.toUShort' call
      var tmp$ret$0 = _UShort___init__impl__jigrne(v);
      this.r1r(UShort__toString_impl_edaoee(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toUShort' call
      var tmp$ret$1 = _UShort___init__impl__jigrne(v);
      this.h1r(UShort__toString_impl_edaoee(tmp$ret$1));
    }
  };
  function ComposerForUnquotedLiterals(writer, forceQuoting) {
    Composer.call(this, writer);
    this.y1r_1 = forceQuoting;
  }
  protoOf(ComposerForUnquotedLiterals).r1r = function (value) {
    if (this.y1r_1) {
      protoOf(Composer).r1r.call(this, value);
    } else {
      protoOf(Composer).h1r.call(this, value);
    }
  };
  function ComposerWithPrettyPrint(writer, json) {
    Composer.call(this, writer);
    this.b1s_1 = json;
    this.c1s_1 = 0;
  }
  protoOf(ComposerWithPrettyPrint).a1r = function () {
    this.z1q_1 = true;
    this.c1s_1 = this.c1s_1 + 1 | 0;
  };
  protoOf(ComposerWithPrettyPrint).b1r = function () {
    this.c1s_1 = this.c1s_1 - 1 | 0;
  };
  protoOf(ComposerWithPrettyPrint).c1r = function () {
    this.z1q_1 = false;
    this.h1r('\n');
    // Inline function 'kotlin.repeat' call
    var times = this.c1s_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlinx.serialization.json.internal.ComposerWithPrettyPrint.nextItem.<anonymous>' call
        this.h1r(this.b1s_1.h1n_1.c1p_1);
      }
       while (inductionVariable < times);
  };
  protoOf(ComposerWithPrettyPrint).d1r = function () {
    if (this.z1q_1)
      this.z1q_1 = false;
    else {
      this.c1r();
    }
  };
  protoOf(ComposerWithPrettyPrint).e1r = function () {
    this.f1r(_Char___init__impl__6a9atx(32));
  };
  function readIfAbsent($this, descriptor, index) {
    $this.e1s_1 = (!descriptor.tm(index) && descriptor.sm(index).km());
    return $this.e1s_1;
  }
  function JsonElementMarker$readIfAbsent$ref($boundThis) {
    var l = function (p0, p1) {
      return readIfAbsent($boundThis, p0, p1);
    };
    l.callableName = 'readIfAbsent';
    return l;
  }
  function JsonElementMarker(descriptor) {
    var tmp = this;
    tmp.d1s_1 = new ElementMarker(descriptor, JsonElementMarker$readIfAbsent$ref(this));
    this.e1s_1 = false;
  }
  protoOf(JsonElementMarker).f1s = function (index) {
    this.d1s_1.lu(index);
  };
  protoOf(JsonElementMarker).g1s = function () {
    return this.d1s_1.mu();
  };
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, message + '\nJSON input: ' + toString(minify(input, offset)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function minify(_this__u8e3s4, offset) {
    offset = offset === VOID ? -1 : offset;
    if (charSequenceLength(_this__u8e3s4) < 200)
      return _this__u8e3s4;
    if (offset === -1) {
      var start = charSequenceLength(_this__u8e3s4) - 60 | 0;
      if (start <= 0)
        return _this__u8e3s4;
      // Inline function 'kotlin.text.substring' call
      var endIndex = charSequenceLength(_this__u8e3s4);
      return '.....' + toString(charSequenceSubSequence(_this__u8e3s4, start, endIndex));
    }
    var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= charSequenceLength(_this__u8e3s4) ? '' : '.....';
    // Inline function 'kotlin.text.substring' call
    var startIndex = coerceAtLeast(start_0, 0);
    var endIndex_0 = coerceAtMost(end, charSequenceLength(_this__u8e3s4));
    return prefix + toString(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex_0)) + suffix;
  }
  function invalidTrailingComma(_this__u8e3s4, entity) {
    entity = entity === VOID ? 'object' : entity;
    _this__u8e3s4.h1s('Trailing comma before the end of JSON ' + entity, _this__u8e3s4.y1n_1 - 1 | 0, "Trailing commas are non-complaint JSON and not allowed by default. Use 'allowTrailingCommas = true' in 'Json {}' builder to support them.");
  }
  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
    _this__u8e3s4.i1s('Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification', VOID, "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'");
  }
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException("Value of type '" + keyDescriptor.om() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.um().toString() + "'.\n") + "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.");
  }
  function InvalidFloatingPointEncoded(value, key, output) {
    return new JsonEncodingException(unexpectedFpErrorMessage(value, key, output));
  }
  function InvalidFloatingPointDecoded(value, key, output) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
  }
  function UnknownKeyException(key, input) {
    return JsonDecodingException_1(-1, "Encountered an unknown key '" + key + "'.\n" + "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.\n" + ('Current input: ' + toString(minify(input))));
  }
  function InvalidFloatingPointEncoded_0(value, output) {
    return new JsonEncodingException('Unexpected special floating-point value ' + toString(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n" + ('Current output: ' + toString(minify(output))));
  }
  function unexpectedFpErrorMessage(value, key, output) {
    return 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n" + ('Current output: ' + toString(minify(output)));
  }
  function get_JsonDeserializationNamesKey() {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    return JsonDeserializationNamesKey;
  }
  var JsonDeserializationNamesKey;
  function get_JsonSerializationNamesKey() {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    return JsonSerializationNamesKey;
  }
  var JsonSerializationNamesKey;
  function getJsonNameIndex(_this__u8e3s4, json, name) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    if (decodeCaseInsensitive(json, _this__u8e3s4)) {
      // Inline function 'kotlin.text.lowercase' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp$ret$1 = name.toLowerCase();
      return getJsonNameIndexSlowPath(_this__u8e3s4, json, tmp$ret$1);
    }
    var strategy = namingStrategy(_this__u8e3s4, json);
    if (!(strategy == null))
      return getJsonNameIndexSlowPath(_this__u8e3s4, json, name);
    var index = _this__u8e3s4.qm(name);
    if (!(index === -3))
      return index;
    if (!json.h1n_1.h1p_1)
      return index;
    return getJsonNameIndexSlowPath(_this__u8e3s4, json, name);
  }
  function getJsonNameIndexOrThrow(_this__u8e3s4, json, name, suffix) {
    suffix = suffix === VOID ? '' : suffix;
    _init_properties_JsonNamesMap_kt__cbbp0k();
    var index = getJsonNameIndex(_this__u8e3s4, json, name);
    if (index === -3)
      throw SerializationException_init_$Create$(_this__u8e3s4.om() + " does not contain element with name '" + name + "'" + suffix);
    return index;
  }
  function getJsonElementName(_this__u8e3s4, json, index) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    var strategy = namingStrategy(_this__u8e3s4, json);
    return strategy == null ? _this__u8e3s4.pm(index) : serializationNamesIndices(_this__u8e3s4, json, strategy)[index];
  }
  function namingStrategy(_this__u8e3s4, json) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    return equals(_this__u8e3s4.um(), CLASS_getInstance()) ? json.h1n_1.i1p_1 : null;
  }
  function deserializationNamesMap(_this__u8e3s4, descriptor) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    var tmp = get_schemaCache(_this__u8e3s4);
    var tmp_0 = get_JsonDeserializationNamesKey();
    return tmp.k1s(descriptor, tmp_0, deserializationNamesMap$lambda(descriptor, _this__u8e3s4));
  }
  function decodeCaseInsensitive(_this__u8e3s4, descriptor) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    return _this__u8e3s4.h1n_1.j1p_1 && equals(descriptor.um(), ENUM_getInstance());
  }
  function getJsonNameIndexSlowPath(_this__u8e3s4, json, name) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    var tmp0_elvis_lhs = deserializationNamesMap(json, _this__u8e3s4).g2(name);
    return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
  }
  function serializationNamesIndices(_this__u8e3s4, json, strategy) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    var tmp = get_schemaCache(json);
    var tmp_0 = get_JsonSerializationNamesKey();
    return tmp.k1s(_this__u8e3s4, tmp_0, serializationNamesIndices$lambda(_this__u8e3s4, strategy));
  }
  function buildDeserializationNamesMap(_this__u8e3s4, json) {
    _init_properties_JsonNamesMap_kt__cbbp0k();
    // Inline function 'kotlin.collections.mutableMapOf' call
    var builder = LinkedHashMap_init_$Create$();
    var useLowercaseEnums = decodeCaseInsensitive(json, _this__u8e3s4);
    var strategyForClasses = namingStrategy(_this__u8e3s4, json);
    var inductionVariable = 0;
    var last = _this__u8e3s4.wm();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.filterIsInstance' call
        // Inline function 'kotlin.collections.filterIsInstanceTo' call
        var this_0 = _this__u8e3s4.rm(i);
        var destination = ArrayList_init_$Create$();
        var tmp0_iterator = this_0.n();
        while (tmp0_iterator.o()) {
          var element = tmp0_iterator.p();
          if (element instanceof JsonNames) {
            destination.l(element);
          }
        }
        var tmp9_safe_receiver = singleOrNull(destination);
        var tmp10_safe_receiver = tmp9_safe_receiver == null ? null : tmp9_safe_receiver.l1s_1;
        if (tmp10_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.collections.forEach' call
          var inductionVariable_0 = 0;
          var last_0 = tmp10_safe_receiver.length;
          while (inductionVariable_0 < last_0) {
            var element_0 = tmp10_safe_receiver[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            // Inline function 'kotlinx.serialization.json.internal.buildDeserializationNamesMap.<anonymous>' call
            var tmp;
            if (useLowercaseEnums) {
              // Inline function 'kotlin.text.lowercase' call
              // Inline function 'kotlin.js.asDynamic' call
              tmp = element_0.toLowerCase();
            } else {
              tmp = element_0;
            }
            buildDeserializationNamesMap$putOrThrow(builder, _this__u8e3s4, tmp, i);
          }
        }
        var tmp_0;
        if (useLowercaseEnums) {
          // Inline function 'kotlin.text.lowercase' call
          // Inline function 'kotlin.js.asDynamic' call
          tmp_0 = _this__u8e3s4.pm(i).toLowerCase();
        } else if (!(strategyForClasses == null)) {
          tmp_0 = strategyForClasses.m1s(_this__u8e3s4, i, _this__u8e3s4.pm(i));
        } else {
          tmp_0 = null;
        }
        var nameToPut = tmp_0;
        if (nameToPut == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          buildDeserializationNamesMap$putOrThrow(builder, _this__u8e3s4, nameToPut, i);
        }
      }
       while (inductionVariable < last);
    // Inline function 'kotlin.collections.ifEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp_1;
    if (builder.i()) {
      // Inline function 'kotlinx.serialization.json.internal.buildDeserializationNamesMap.<anonymous>' call
      tmp_1 = emptyMap();
    } else {
      tmp_1 = builder;
    }
    return tmp_1;
  }
  function buildDeserializationNamesMap$putOrThrow(_this__u8e3s4, $this_buildDeserializationNamesMap, name, index) {
    var entity = equals($this_buildDeserializationNamesMap.um(), ENUM_getInstance()) ? 'enum value' : 'property';
    // Inline function 'kotlin.collections.contains' call
    // Inline function 'kotlin.collections.containsKey' call
    if ((isInterface(_this__u8e3s4, KtMap) ? _this__u8e3s4 : THROW_CCE()).e2(name)) {
      throw new JsonException("The suggested name '" + name + "' for " + entity + ' ' + $this_buildDeserializationNamesMap.pm(index) + ' is already one of the names for ' + entity + ' ' + ($this_buildDeserializationNamesMap.pm(getValue(_this__u8e3s4, name)) + ' in ' + toString($this_buildDeserializationNamesMap)));
    }
    // Inline function 'kotlin.collections.set' call
    _this__u8e3s4.r2(name, index);
  }
  function deserializationNamesMap$lambda($descriptor, $this_deserializationNamesMap) {
    return function () {
      return buildDeserializationNamesMap($descriptor, $this_deserializationNamesMap);
    };
  }
  function serializationNamesIndices$lambda($this_serializationNamesIndices, $strategy) {
    return function () {
      var tmp = 0;
      var tmp_0 = $this_serializationNamesIndices.wm();
      // Inline function 'kotlin.arrayOfNulls' call
      var tmp_1 = fillArrayVal(Array(tmp_0), null);
      while (tmp < tmp_0) {
        var tmp_2 = tmp;
        var baseName = $this_serializationNamesIndices.pm(tmp_2);
        tmp_1[tmp_2] = $strategy.m1s($this_serializationNamesIndices, tmp_2, baseName);
        tmp = tmp + 1 | 0;
      }
      return tmp_1;
    };
  }
  var properties_initialized_JsonNamesMap_kt_ljpf42;
  function _init_properties_JsonNamesMap_kt__cbbp0k() {
    if (!properties_initialized_JsonNamesMap_kt_ljpf42) {
      properties_initialized_JsonNamesMap_kt_ljpf42 = true;
      JsonDeserializationNamesKey = new Key();
      JsonSerializationNamesKey = new Key();
    }
  }
  function Tombstone() {
  }
  var Tombstone_instance;
  function Tombstone_getInstance() {
    return Tombstone_instance;
  }
  function resize($this) {
    var newSize = imul($this.p1s_1, 2);
    $this.n1s_1 = copyOf($this.n1s_1, newSize);
    $this.o1s_1 = copyOf_0($this.o1s_1, newSize);
  }
  function JsonPath() {
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.n1s_1 = fillArrayVal(Array(8), null);
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = new Int32Array(8);
    while (tmp_1 < 8) {
      tmp_2[tmp_1] = -1;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.o1s_1 = tmp_2;
    this.p1s_1 = -1;
  }
  protoOf(JsonPath).q1s = function (sd) {
    this.p1s_1 = this.p1s_1 + 1 | 0;
    var depth = this.p1s_1;
    if (depth === this.n1s_1.length) {
      resize(this);
    }
    this.n1s_1[depth] = sd;
  };
  protoOf(JsonPath).r1s = function (index) {
    this.o1s_1[this.p1s_1] = index;
  };
  protoOf(JsonPath).s1s = function (key) {
    var tmp;
    if (!(this.o1s_1[this.p1s_1] === -2)) {
      this.p1s_1 = this.p1s_1 + 1 | 0;
      tmp = this.p1s_1 === this.n1s_1.length;
    } else {
      tmp = false;
    }
    if (tmp) {
      resize(this);
    }
    this.n1s_1[this.p1s_1] = key;
    this.o1s_1[this.p1s_1] = -2;
  };
  protoOf(JsonPath).t1s = function () {
    if (this.o1s_1[this.p1s_1] === -2) {
      this.n1s_1[this.p1s_1] = Tombstone_instance;
    }
  };
  protoOf(JsonPath).u1s = function () {
    var depth = this.p1s_1;
    if (this.o1s_1[depth] === -2) {
      this.o1s_1[depth] = -1;
      this.p1s_1 = this.p1s_1 - 1 | 0;
    }
    if (!(this.p1s_1 === -1)) {
      this.p1s_1 = this.p1s_1 - 1 | 0;
    }
  };
  protoOf(JsonPath).v1s = function () {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.internal.JsonPath.getPath.<anonymous>' call
    this_0.s8('$');
    // Inline function 'kotlin.repeat' call
    var times = this.p1s_1 + 1 | 0;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlinx.serialization.json.internal.JsonPath.getPath.<anonymous>.<anonymous>' call
        var element = this.n1s_1[index];
        if (!(element == null) ? isInterface(element, SerialDescriptor) : false) {
          if (equals(element.um(), LIST_getInstance())) {
            if (!(this.o1s_1[index] === -1)) {
              this_0.s8('[');
              this_0.dc(this.o1s_1[index]);
              this_0.s8(']');
            }
          } else {
            var idx = this.o1s_1[index];
            if (idx >= 0) {
              this_0.s8('.');
              this_0.s8(element.pm(idx));
            }
          }
        } else {
          if (!(element === Tombstone_instance)) {
            this_0.s8('[');
            this_0.s8("'");
            this_0.r8(element);
            this_0.s8("'");
            this_0.s8(']');
          }
        }
      }
       while (inductionVariable < times);
    return this_0.toString();
  };
  protoOf(JsonPath).toString = function () {
    return this.v1s();
  };
  function encodeByWriter(json, writer, serializer, value) {
    var tmp = WriteMode_OBJ_getInstance();
    // Inline function 'kotlin.arrayOfNulls' call
    var size = get_entries().q();
    var tmp$ret$0 = fillArrayVal(Array(size), null);
    var encoder = StreamingJsonEncoder_init_$Create$(writer, json, tmp, tmp$ret$0);
    encoder.tl(serializer, value);
  }
  function readObject($this) {
    // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readObjectImpl' call
    var lastToken = $this.f1t_1.j1t(6);
    if ($this.f1t_1.k1t() === 4) {
      $this.f1t_1.i1s('Unexpected leading comma');
    }
    // Inline function 'kotlin.collections.linkedMapOf' call
    var result = LinkedHashMap_init_$Create$();
    $l$loop: while ($this.f1t_1.l1t()) {
      var key = $this.g1t_1 ? $this.f1t_1.n1t() : $this.f1t_1.m1t();
      $this.f1t_1.j1t(5);
      // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readObject.<anonymous>' call
      var element = $this.o1t();
      // Inline function 'kotlin.collections.set' call
      result.r2(key, element);
      lastToken = $this.f1t_1.p1t();
      var tmp13_subject = lastToken;
      if (tmp13_subject !== 4)
        if (tmp13_subject === 7)
          break $l$loop;
        else {
          $this.f1t_1.i1s('Expected end of the object or comma');
        }
    }
    if (lastToken === 6) {
      $this.f1t_1.j1t(7);
    } else if (lastToken === 4) {
      if (!$this.h1t_1) {
        invalidTrailingComma($this.f1t_1);
      }
      $this.f1t_1.j1t(7);
    }
    return new JsonObject(result);
  }
  function readObject_0(_this__u8e3s4, $this, $completion) {
    var tmp = new $readObjectCOROUTINE$0($this, _this__u8e3s4, $completion);
    tmp.l9_1 = Unit_instance;
    tmp.m9_1 = null;
    return tmp.r9();
  }
  function readArray($this) {
    var lastToken = $this.f1t_1.p1t();
    if ($this.f1t_1.k1t() === 4) {
      $this.f1t_1.i1s('Unexpected leading comma');
    }
    // Inline function 'kotlin.collections.arrayListOf' call
    var result = ArrayList_init_$Create$();
    while ($this.f1t_1.l1t()) {
      var element = $this.o1t();
      result.l(element);
      lastToken = $this.f1t_1.p1t();
      if (!(lastToken === 4)) {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
        var this_0 = $this.f1t_1;
        var condition = lastToken === 9;
        var position = this_0.y1n_1;
        if (!condition) {
          // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readArray.<anonymous>' call
          var tmp$ret$1 = 'Expected end of the array or comma';
          this_0.i1s(tmp$ret$1, position);
        }
      }
    }
    if (lastToken === 8) {
      $this.f1t_1.j1t(9);
    } else if (lastToken === 4) {
      if (!$this.h1t_1) {
        invalidTrailingComma($this.f1t_1, 'array');
      }
      $this.f1t_1.j1t(9);
    }
    return new JsonArray(result);
  }
  function readValue($this, isString) {
    var tmp;
    if ($this.g1t_1 || !isString) {
      tmp = $this.f1t_1.n1t();
    } else {
      tmp = $this.f1t_1.m1t();
    }
    var string = tmp;
    if (!isString && string === 'null')
      return JsonNull_getInstance();
    return new JsonLiteral(string, isString);
  }
  function readDeepRecursive($this) {
    return invoke(new DeepRecursiveFunction(JsonTreeReader$readDeepRecursive$slambda_0($this, null)), Unit_instance);
  }
  function JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation) {
    this.m1u_1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(JsonTreeReader$readDeepRecursive$slambda).r1u = function ($this$DeepRecursiveFunction, it, $completion) {
    var tmp = this.s1u($this$DeepRecursiveFunction, it, $completion);
    tmp.l9_1 = Unit_instance;
    tmp.m9_1 = null;
    return tmp.r9();
  };
  protoOf(JsonTreeReader$readDeepRecursive$slambda).ca = function (p1, p2, $completion) {
    var tmp = p1 instanceof DeepRecursiveScope ? p1 : THROW_CCE();
    return this.r1u(tmp, p2 instanceof Unit ? p2 : THROW_CCE(), $completion);
  };
  protoOf(JsonTreeReader$readDeepRecursive$slambda).r9 = function () {
    var suspendResult = this.l9_1;
    $sm: do
      try {
        var tmp = this.j9_1;
        switch (tmp) {
          case 0:
            this.k9_1 = 3;
            this.p1u_1 = this.m1u_1.f1t_1.k1t();
            if (this.p1u_1 === 1) {
              this.q1u_1 = readValue(this.m1u_1, true);
              this.j9_1 = 2;
              continue $sm;
            } else {
              if (this.p1u_1 === 0) {
                this.q1u_1 = readValue(this.m1u_1, false);
                this.j9_1 = 2;
                continue $sm;
              } else {
                if (this.p1u_1 === 6) {
                  this.j9_1 = 1;
                  suspendResult = readObject_0(this.n1u_1, this.m1u_1, this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.p1u_1 === 8) {
                    this.q1u_1 = readArray(this.m1u_1);
                    this.j9_1 = 2;
                    continue $sm;
                  } else {
                    var tmp_0 = this;
                    this.m1u_1.f1t_1.i1s("Can't begin reading element, unexpected token");
                  }
                }
              }
            }

            break;
          case 1:
            this.q1u_1 = suspendResult;
            this.j9_1 = 2;
            continue $sm;
          case 2:
            return this.q1u_1;
          case 3:
            throw this.m9_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.k9_1 === 3) {
          throw e;
        } else {
          this.j9_1 = this.k9_1;
          this.m9_1 = e;
        }
      }
     while (true);
  };
  protoOf(JsonTreeReader$readDeepRecursive$slambda).s1u = function ($this$DeepRecursiveFunction, it, completion) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this.m1u_1, completion);
    i.n1u_1 = $this$DeepRecursiveFunction;
    i.o1u_1 = it;
    return i;
  };
  function JsonTreeReader$readDeepRecursive$slambda_0(this$0, resultContinuation) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation);
    var l = function ($this$DeepRecursiveFunction, it, $completion) {
      return i.r1u($this$DeepRecursiveFunction, it, $completion);
    };
    l.$arity = 2;
    return l;
  }
  function $readObjectCOROUTINE$0(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.y1t_1 = _this__u8e3s4;
    this.z1t_1 = _this__u8e3s4_0;
  }
  protoOf($readObjectCOROUTINE$0).r9 = function () {
    var suspendResult = this.l9_1;
    $sm: do
      try {
        var tmp = this.j9_1;
        switch (tmp) {
          case 0:
            this.k9_1 = 5;
            var tmp_0 = this;
            tmp_0.a1u_1 = this.y1t_1;
            this.b1u_1 = this.a1u_1.f1t_1.j1t(6);
            if (this.a1u_1.f1t_1.k1t() === 4) {
              this.a1u_1.f1t_1.i1s('Unexpected leading comma');
            }

            var tmp_1 = this;
            tmp_1.c1u_1 = LinkedHashMap_init_$Create$();
            this.j9_1 = 1;
            continue $sm;
          case 1:
            if (!this.a1u_1.f1t_1.l1t()) {
              this.j9_1 = 4;
              continue $sm;
            }

            this.d1u_1 = this.a1u_1.g1t_1 ? this.a1u_1.f1t_1.n1t() : this.a1u_1.f1t_1.m1t();
            this.a1u_1.f1t_1.j1t(5);
            this.j9_1 = 2;
            suspendResult = this.z1t_1.gi(Unit_instance, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var element = suspendResult;
            var this_0 = this.c1u_1;
            var key = this.d1u_1;
            this_0.r2(key, element);
            this.b1u_1 = this.a1u_1.f1t_1.p1t();
            var tmp13_subject = this.b1u_1;
            if (tmp13_subject === 4) {
              this.j9_1 = 3;
              continue $sm;
            } else {
              if (tmp13_subject === 7) {
                this.j9_1 = 4;
                continue $sm;
              } else {
                this.a1u_1.f1t_1.i1s('Expected end of the object or comma');
              }
            }

            break;
          case 3:
            this.j9_1 = 1;
            continue $sm;
          case 4:
            if (this.b1u_1 === 6) {
              this.a1u_1.f1t_1.j1t(7);
            } else if (this.b1u_1 === 4) {
              if (!this.a1u_1.h1t_1) {
                invalidTrailingComma(this.a1u_1.f1t_1);
              }
              this.a1u_1.f1t_1.j1t(7);
            }

            return new JsonObject(this.c1u_1);
          case 5:
            throw this.m9_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.k9_1 === 5) {
          throw e;
        } else {
          this.j9_1 = this.k9_1;
          this.m9_1 = e;
        }
      }
     while (true);
  };
  function JsonTreeReader(configuration, lexer) {
    this.f1t_1 = lexer;
    this.g1t_1 = configuration.y1o_1;
    this.h1t_1 = configuration.k1p_1;
    this.i1t_1 = 0;
  }
  protoOf(JsonTreeReader).o1t = function () {
    var token = this.f1t_1.k1t();
    var tmp;
    if (token === 1) {
      tmp = readValue(this, true);
    } else if (token === 0) {
      tmp = readValue(this, false);
    } else if (token === 6) {
      var tmp_0;
      this.i1t_1 = this.i1t_1 + 1 | 0;
      if (this.i1t_1 === 200) {
        tmp_0 = readDeepRecursive(this);
      } else {
        tmp_0 = readObject(this);
      }
      var result = tmp_0;
      this.i1t_1 = this.i1t_1 - 1 | 0;
      tmp = result;
    } else if (token === 8) {
      tmp = readArray(this);
    } else {
      this.f1t_1.i1s('Cannot read Json element because of unexpected ' + tokenDescription(token));
    }
    return tmp;
  };
  function classDiscriminator(_this__u8e3s4, json) {
    var _iterator__ex2g4s = _this__u8e3s4.il().n();
    while (_iterator__ex2g4s.o()) {
      var annotation = _iterator__ex2g4s.p();
      if (annotation instanceof JsonClassDiscriminator)
        return annotation.t1u_1;
    }
    return json.h1n_1.f1p_1;
  }
  function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
    if (!(serializer instanceof SealedClassSerializer))
      return Unit_instance;
    if (jsonCachedSerialNames(actualSerializer.hl()).w1(classDiscriminator)) {
      var baseName = serializer.hl().om();
      var actualName = actualSerializer.hl().om();
      // Inline function 'kotlin.error' call
      var message = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
      throw IllegalStateException_init_$Create$(toString(message));
    }
  }
  function checkKind(kind) {
    if (kind instanceof ENUM) {
      // Inline function 'kotlin.error' call
      var message = "Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (kind instanceof PrimitiveKind) {
      // Inline function 'kotlin.error' call
      var message_0 = "Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    if (kind instanceof PolymorphicKind) {
      // Inline function 'kotlin.error' call
      var message_1 = 'Actual serializer for polymorphic cannot be polymorphic itself';
      throw IllegalStateException_init_$Create$(toString(message_1));
    }
  }
  function validateIfSealed$accessor$1rk9rdt(serializer, actualSerializer, classDiscriminator) {
    return validateIfSealed(serializer, actualSerializer, classDiscriminator);
  }
  function checkKind_0($this, descriptor, actualClass) {
    var kind = descriptor.um();
    var tmp;
    if (kind instanceof PolymorphicKind) {
      tmp = true;
    } else {
      tmp = equals(kind, CONTEXTUAL_getInstance());
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.qa() + " can't be registered as a subclass for polymorphic serialization " + ('because its kind ' + kind.toString() + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
    }
    if ($this.u1u_1)
      return Unit_instance;
    var tmp_0;
    var tmp_1;
    if (equals(kind, LIST_getInstance()) || equals(kind, MAP_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = kind instanceof PrimitiveKind;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      tmp_0 = kind instanceof ENUM;
    }
    if (tmp_0) {
      throw IllegalArgumentException_init_$Create$('Serializer for ' + actualClass.qa() + ' of kind ' + kind.toString() + ' cannot be serialized polymorphically with class discriminator.');
    }
  }
  function checkDiscriminatorCollisions($this, descriptor, actualClass) {
    var inductionVariable = 0;
    var last = descriptor.wm();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var name = descriptor.pm(i);
        if (name === $this.v1u_1) {
          throw IllegalArgumentException_init_$Create$('Polymorphic serializer for ' + toString(actualClass) + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
        }
      }
       while (inductionVariable < last);
  }
  function PolymorphismValidator(useArrayPolymorphism, discriminator) {
    this.u1u_1 = useArrayPolymorphism;
    this.v1u_1 = discriminator;
  }
  protoOf(PolymorphismValidator).f16 = function (kClass, provider) {
  };
  protoOf(PolymorphismValidator).i16 = function (baseClass, actualClass, actualSerializer) {
    var descriptor = actualSerializer.hl();
    checkKind_0(this, descriptor, actualClass);
    if (!this.u1u_1) {
      checkDiscriminatorCollisions(this, descriptor, actualClass);
    }
  };
  protoOf(PolymorphismValidator).j16 = function (baseClass, defaultSerializerProvider) {
  };
  protoOf(PolymorphismValidator).k16 = function (baseClass, defaultDeserializerProvider) {
  };
  function Key() {
  }
  function DescriptorSchemaCache() {
    this.j1s_1 = createMapForCache(16);
  }
  protoOf(DescriptorSchemaCache).w1u = function (descriptor, key, value) {
    // Inline function 'kotlin.collections.set' call
    // Inline function 'kotlin.collections.getOrPut' call
    var this_0 = this.j1s_1;
    var value_0 = this_0.g2(descriptor);
    var tmp;
    if (value_0 == null) {
      // Inline function 'kotlinx.serialization.json.internal.DescriptorSchemaCache.set.<anonymous>' call
      var answer = createMapForCache(2);
      this_0.r2(descriptor, answer);
      tmp = answer;
    } else {
      tmp = value_0;
    }
    var this_1 = tmp;
    var key_0 = key instanceof Key ? key : THROW_CCE();
    var value_1 = !(value == null) ? value : THROW_CCE();
    this_1.r2(key_0, value_1);
  };
  protoOf(DescriptorSchemaCache).k1s = function (descriptor, key, defaultValue) {
    var tmp18_safe_receiver = this.x1u(descriptor, key);
    if (tmp18_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp18_safe_receiver;
    }
    var value = defaultValue();
    this.w1u(descriptor, key, value);
    return value;
  };
  protoOf(DescriptorSchemaCache).x1u = function (descriptor, key) {
    var tmp19_safe_receiver = this.j1s_1.g2(descriptor);
    var tmp;
    if (tmp19_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = tmp19_safe_receiver.g2(key instanceof Key ? key : THROW_CCE());
    }
    var tmp_0 = tmp;
    return !(tmp_0 == null) ? tmp_0 : null;
  };
  function DiscriminatorHolder(discriminatorToSkip) {
    this.y1u_1 = discriminatorToSkip;
  }
  function trySkip(_this__u8e3s4, $this, unknownKey) {
    if (_this__u8e3s4 == null)
      return false;
    if (_this__u8e3s4.y1u_1 === unknownKey) {
      _this__u8e3s4.y1u_1 = null;
      return true;
    }
    return false;
  }
  function skipLeftoverElements($this, descriptor) {
    while (!($this.zo(descriptor) === -1)) {
    }
  }
  function checkLeadingComma($this) {
    if ($this.s1n_1.k1t() === 4) {
      $this.s1n_1.i1s('Unexpected leading comma');
    }
  }
  function decodeMapIndex($this) {
    var hasComma = false;
    var decodingKey = !(($this.u1n_1 % 2 | 0) === 0);
    if (decodingKey) {
      if (!($this.u1n_1 === -1)) {
        hasComma = $this.s1n_1.a1v();
      }
    } else {
      $this.s1n_1.z1u(_Char___init__impl__6a9atx(58));
    }
    var tmp;
    if ($this.s1n_1.l1t()) {
      if (decodingKey) {
        if ($this.u1n_1 === -1) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
          var this_0 = $this.s1n_1;
          var condition = !hasComma;
          var position = this_0.y1n_1;
          if (!condition) {
            // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
            var tmp$ret$0 = 'Unexpected leading comma';
            this_0.i1s(tmp$ret$0, position);
          }
        } else {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
          var this_1 = $this.s1n_1;
          var condition_0 = hasComma;
          var position_0 = this_1.y1n_1;
          if (!condition_0) {
            // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
            var tmp$ret$1 = 'Expected comma after the key-value pair';
            this_1.i1s(tmp$ret$1, position_0);
          }
        }
      }
      $this.u1n_1 = $this.u1n_1 + 1 | 0;
      tmp = $this.u1n_1;
    } else {
      if (hasComma && !$this.q1n_1.h1n_1.k1p_1) {
        invalidTrailingComma($this.s1n_1);
      }
      tmp = -1;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var tmp$ret$1;
    $l$block_2: {
      // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue' call
      var this_0 = $this.q1n_1;
      var isOptional = descriptor.tm(index);
      var elementDescriptor = descriptor.sm(index);
      var tmp;
      if (isOptional && !elementDescriptor.km()) {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
        tmp = $this.s1n_1.b1v(true);
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$1 = true;
        break $l$block_2;
      }
      if (equals(elementDescriptor.um(), ENUM_getInstance())) {
        var tmp_0;
        if (elementDescriptor.km()) {
          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
          tmp_0 = $this.s1n_1.b1v(false);
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$1 = false;
          break $l$block_2;
        }
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
        var tmp0_elvis_lhs = $this.s1n_1.c1v($this.w1n_1.y1o_1);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$1 = false;
          break $l$block_2;
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        var enumValue = tmp_1;
        var enumIndex = getJsonNameIndex(elementDescriptor, this_0, enumValue);
        var coerceToNull = !this_0.h1n_1.b1p_1 && elementDescriptor.km();
        if (enumIndex === -3 && (isOptional || coerceToNull)) {
          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
          $this.s1n_1.m1t();
          tmp$ret$1 = true;
          break $l$block_2;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function decodeObjectIndex($this, descriptor) {
    var hasComma = $this.s1n_1.a1v();
    while ($this.s1n_1.l1t()) {
      hasComma = false;
      var key = decodeStringKey($this);
      $this.s1n_1.z1u(_Char___init__impl__6a9atx(58));
      var index = getJsonNameIndex(descriptor, $this.q1n_1, key);
      var tmp;
      if (!(index === -3)) {
        var tmp_0;
        if ($this.w1n_1.d1p_1 && coerceInputValue($this, descriptor, index)) {
          hasComma = $this.s1n_1.a1v();
          tmp_0 = false;
        } else {
          var tmp23_safe_receiver = $this.x1n_1;
          if (tmp23_safe_receiver == null)
            null;
          else {
            tmp23_safe_receiver.f1s(index);
          }
          return index;
        }
        tmp = tmp_0;
      } else {
        tmp = true;
      }
      var isUnknown = tmp;
      if (isUnknown) {
        hasComma = handleUnknown($this, key);
      }
    }
    if (hasComma && !$this.q1n_1.h1n_1.k1p_1) {
      invalidTrailingComma($this.s1n_1);
    }
    var tmp24_safe_receiver = $this.x1n_1;
    var tmp0_elvis_lhs = tmp24_safe_receiver == null ? null : tmp24_safe_receiver.g1s();
    return tmp0_elvis_lhs == null ? -1 : tmp0_elvis_lhs;
  }
  function handleUnknown($this, key) {
    if ($this.w1n_1.x1o_1 || trySkip($this.v1n_1, $this, key)) {
      $this.s1n_1.e1v($this.w1n_1.y1o_1);
    } else {
      $this.s1n_1.d1v(key);
    }
    return $this.s1n_1.a1v();
  }
  function decodeListIndex($this) {
    var hasComma = $this.s1n_1.a1v();
    var tmp;
    if ($this.s1n_1.l1t()) {
      if (!($this.u1n_1 === -1) && !hasComma) {
        $this.s1n_1.i1s('Expected end of the array or comma');
      }
      $this.u1n_1 = $this.u1n_1 + 1 | 0;
      tmp = $this.u1n_1;
    } else {
      if (hasComma && !$this.q1n_1.h1n_1.k1p_1) {
        invalidTrailingComma($this.s1n_1, 'array');
      }
      tmp = -1;
    }
    return tmp;
  }
  function decodeStringKey($this) {
    var tmp;
    if ($this.w1n_1.y1o_1) {
      tmp = $this.s1n_1.g1v();
    } else {
      tmp = $this.s1n_1.f1v();
    }
    return tmp;
  }
  function StreamingJsonDecoder(json, mode, lexer, descriptor, discriminatorHolder) {
    AbstractDecoder.call(this);
    this.q1n_1 = json;
    this.r1n_1 = mode;
    this.s1n_1 = lexer;
    this.t1n_1 = this.q1n_1.sl();
    this.u1n_1 = -1;
    this.v1n_1 = discriminatorHolder;
    this.w1n_1 = this.q1n_1.h1n_1;
    this.x1n_1 = this.w1n_1.b1p_1 ? null : new JsonElementMarker(descriptor);
  }
  protoOf(StreamingJsonDecoder).n1p = function () {
    return this.q1n_1;
  };
  protoOf(StreamingJsonDecoder).sl = function () {
    return this.t1n_1;
  };
  protoOf(StreamingJsonDecoder).o1p = function () {
    return (new JsonTreeReader(this.q1n_1.h1n_1, this.s1n_1)).o1t();
  };
  protoOf(StreamingJsonDecoder).wl = function (deserializer) {
    try {
      var tmp;
      if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.q1n_1.h1n_1.e1p_1;
      }
      if (tmp) {
        return deserializer.vl(this);
      }
      var discriminator = classDiscriminator(deserializer.hl(), this.q1n_1);
      var tmp0_elvis_lhs = this.s1n_1.h1v(discriminator, this.w1n_1.y1o_1);
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$0;
        $l$block: {
          // Inline function 'kotlinx.serialization.json.internal.decodeSerializableValuePolymorphic' call
          var deserializer_0 = isInterface(deserializer, DeserializationStrategy) ? deserializer : THROW_CCE();
          var tmp_1;
          if (!(deserializer_0 instanceof AbstractPolymorphicSerializer)) {
            tmp_1 = true;
          } else {
            tmp_1 = this.n1p().h1n_1.e1p_1;
          }
          if (tmp_1) {
            tmp$ret$0 = deserializer_0.vl(this);
            break $l$block;
          }
          var discriminator_0 = classDiscriminator(deserializer_0.hl(), this.n1p());
          // Inline function 'kotlinx.serialization.json.internal.cast' call
          var value = this.o1p();
          var serialName = deserializer_0.hl().om();
          if (!(value instanceof JsonObject)) {
            var tmp_2 = getKClass(JsonObject).qa();
            var tmp_3 = getKClassFromExpression(value).qa();
            // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeSerializableValue.<anonymous>' call
            var tmp$ret$1 = this.s1n_1.z1n_1.v1s();
            throw JsonDecodingException_0(-1, 'Expected ' + tmp_2 + ', but had ' + tmp_3 + ' as the serialized body of ' + serialName + ' at element: ' + tmp$ret$1, toString(value));
          }
          var jsonTree = value;
          var tmp16_safe_receiver = jsonTree.z1p(discriminator_0);
          var tmp17_safe_receiver = tmp16_safe_receiver == null ? null : get_jsonPrimitive(tmp16_safe_receiver);
          var type = tmp17_safe_receiver == null ? null : get_contentOrNull(tmp17_safe_receiver);
          var tmp_4;
          try {
            tmp_4 = findPolymorphicSerializer(deserializer_0, this, type);
          } catch ($p) {
            var tmp_5;
            if ($p instanceof SerializationException) {
              var it = $p;
              throw JsonDecodingException_0(-1, ensureNotNull(it.message), jsonTree.toString());
            } else {
              throw $p;
            }
          }
          var tmp_6 = tmp_4;
          var actualSerializer = isInterface(tmp_6, DeserializationStrategy) ? tmp_6 : THROW_CCE();
          tmp$ret$0 = readPolymorphicJson(this.n1p(), discriminator_0, jsonTree, actualSerializer);
        }
        return tmp$ret$0;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var type_0 = tmp_0;
      var tmp_7;
      try {
        tmp_7 = findPolymorphicSerializer(deserializer, this, type_0);
      } catch ($p) {
        var tmp_8;
        if ($p instanceof SerializationException) {
          var it_0 = $p;
          var message = removeSuffix(substringBefore(ensureNotNull(it_0.message), _Char___init__impl__6a9atx(10)), '.');
          var hint = substringAfter(ensureNotNull(it_0.message), _Char___init__impl__6a9atx(10), '');
          this.s1n_1.i1s(message, VOID, hint);
        } else {
          throw $p;
        }
        tmp_7 = tmp_8;
      }
      var tmp_9 = tmp_7;
      var actualSerializer_0 = isInterface(tmp_9, DeserializationStrategy) ? tmp_9 : THROW_CCE();
      this.v1n_1 = new DiscriminatorHolder(discriminator);
      return actualSerializer_0.vl(this);
    } catch ($p) {
      if ($p instanceof MissingFieldException) {
        var e = $p;
        if (contains_0(ensureNotNull(e.message), 'at path'))
          throw e;
        throw new MissingFieldException(e.fm_1, plus(e.message, ' at path: ') + this.s1n_1.z1n_1.v1s(), e);
      } else {
        throw $p;
      }
    }
  };
  protoOf(StreamingJsonDecoder).jo = function (descriptor) {
    var newMode = switchMode(this.q1n_1, descriptor);
    this.s1n_1.z1n_1.q1s(descriptor);
    this.s1n_1.z1u(newMode.k1v_1);
    checkLeadingComma(this);
    var tmp;
    switch (newMode.v2_1) {
      case 1:
      case 2:
      case 3:
        tmp = new StreamingJsonDecoder(this.q1n_1, newMode, this.s1n_1, descriptor, this.v1n_1);
        break;
      default:
        var tmp_0;
        if (this.r1n_1.equals(newMode) && this.q1n_1.h1n_1.b1p_1) {
          tmp_0 = this;
        } else {
          tmp_0 = new StreamingJsonDecoder(this.q1n_1, newMode, this.s1n_1, descriptor, this.v1n_1);
        }

        tmp = tmp_0;
        break;
    }
    return tmp;
  };
  protoOf(StreamingJsonDecoder).ko = function (descriptor) {
    if (this.q1n_1.h1n_1.x1o_1 && descriptor.wm() === 0) {
      skipLeftoverElements(this, descriptor);
    }
    if (this.s1n_1.a1v() && !this.q1n_1.h1n_1.k1p_1) {
      invalidTrailingComma(this.s1n_1, '');
    }
    this.s1n_1.z1u(this.r1n_1.l1v_1);
    this.s1n_1.z1n_1.u1s();
  };
  protoOf(StreamingJsonDecoder).vn = function () {
    var tmp;
    var tmp21_safe_receiver = this.x1n_1;
    var tmp0_elvis_lhs = tmp21_safe_receiver == null ? null : tmp21_safe_receiver.e1s_1;
    if (!(tmp0_elvis_lhs == null ? false : tmp0_elvis_lhs)) {
      tmp = !this.s1n_1.m1v();
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(StreamingJsonDecoder).wn = function () {
    return null;
  };
  protoOf(StreamingJsonDecoder).vo = function (descriptor, index, deserializer, previousValue) {
    var isMapKey = this.r1n_1.equals(WriteMode_MAP_getInstance()) && (index & 1) === 0;
    if (isMapKey) {
      this.s1n_1.z1n_1.t1s();
    }
    var value = protoOf(AbstractDecoder).vo.call(this, descriptor, index, deserializer, previousValue);
    if (isMapKey) {
      this.s1n_1.z1n_1.s1s(value);
    }
    return value;
  };
  protoOf(StreamingJsonDecoder).zo = function (descriptor) {
    var index;
    switch (this.r1n_1.v2_1) {
      case 0:
        index = decodeObjectIndex(this, descriptor);
        break;
      case 2:
        index = decodeMapIndex(this);
        break;
      default:
        index = decodeListIndex(this);
        break;
    }
    if (!this.r1n_1.equals(WriteMode_MAP_getInstance())) {
      this.s1n_1.z1n_1.r1s(index);
    }
    return index;
  };
  protoOf(StreamingJsonDecoder).xn = function () {
    return this.s1n_1.n1v();
  };
  protoOf(StreamingJsonDecoder).yn = function () {
    var value = this.s1n_1.d1q();
    if (!value.equals(toLong(value.r3()))) {
      this.s1n_1.i1s("Failed to parse byte for input '" + value.toString() + "'");
    }
    return value.r3();
  };
  protoOf(StreamingJsonDecoder).zn = function () {
    var value = this.s1n_1.d1q();
    if (!value.equals(toLong(value.s3()))) {
      this.s1n_1.i1s("Failed to parse short for input '" + value.toString() + "'");
    }
    return value.s3();
  };
  protoOf(StreamingJsonDecoder).ao = function () {
    var value = this.s1n_1.d1q();
    if (!value.equals(toLong(value.i1()))) {
      this.s1n_1.i1s("Failed to parse int for input '" + value.toString() + "'");
    }
    return value.i1();
  };
  protoOf(StreamingJsonDecoder).bo = function () {
    return this.s1n_1.d1q();
  };
  protoOf(StreamingJsonDecoder).co = function () {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.s1n_1;
      var input = this_0.n1t();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeFloat.<anonymous>' call
        // Inline function 'kotlin.text.toFloat' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = toDouble(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          this_0.i1s("Failed to parse type '" + 'float' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.q1n_1.h1n_1.g1p_1;
    if (specialFp || isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this.s1n_1, result);
  };
  protoOf(StreamingJsonDecoder).do = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.s1n_1;
      var input = this_0.n1t();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeDouble.<anonymous>' call
        tmp$ret$1 = toDouble(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          this_0.i1s("Failed to parse type '" + 'double' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.q1n_1.h1n_1.g1p_1;
    if (specialFp || isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this.s1n_1, result);
  };
  protoOf(StreamingJsonDecoder).eo = function () {
    var string = this.s1n_1.n1t();
    if (!(string.length === 1)) {
      this.s1n_1.i1s("Expected single char, but got '" + string + "'");
    }
    return charSequenceGet(string, 0);
  };
  protoOf(StreamingJsonDecoder).fo = function () {
    var tmp;
    if (this.w1n_1.y1o_1) {
      tmp = this.s1n_1.g1v();
    } else {
      tmp = this.s1n_1.m1t();
    }
    return tmp;
  };
  protoOf(StreamingJsonDecoder).ho = function (descriptor) {
    return get_isUnsignedNumber(descriptor) ? new JsonDecoderForUnsignedTypes(this.s1n_1, this.q1n_1) : protoOf(AbstractDecoder).ho.call(this, descriptor);
  };
  protoOf(StreamingJsonDecoder).go = function (enumDescriptor) {
    return getJsonNameIndexOrThrow(enumDescriptor, this.q1n_1, this.fo(), ' at path ' + this.s1n_1.z1n_1.v1s());
  };
  function JsonDecoderForUnsignedTypes(lexer, json) {
    AbstractDecoder.call(this);
    this.o1v_1 = lexer;
    this.p1v_1 = json.sl();
  }
  protoOf(JsonDecoderForUnsignedTypes).sl = function () {
    return this.p1v_1;
  };
  protoOf(JsonDecoderForUnsignedTypes).zo = function (descriptor) {
    var message = 'unsupported';
    throw IllegalStateException_init_$Create$(toString(message));
  };
  protoOf(JsonDecoderForUnsignedTypes).ao = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.o1v_1;
      var input = this_0.n1t();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeInt.<anonymous>' call
        // Inline function 'kotlin.UInt.toInt' call
        var this_1 = toUInt(input);
        tmp$ret$2 = _UInt___get_data__impl__f0vqqw(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          this_0.i1s("Failed to parse type '" + 'UInt' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  protoOf(JsonDecoderForUnsignedTypes).bo = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.o1v_1;
      var input = this_0.n1t();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeLong.<anonymous>' call
        // Inline function 'kotlin.ULong.toLong' call
        var this_1 = toULong(input);
        tmp$ret$2 = _ULong___get_data__impl__fggpzb(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          this_0.i1s("Failed to parse type '" + 'ULong' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  protoOf(JsonDecoderForUnsignedTypes).yn = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.o1v_1;
      var input = this_0.n1t();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeByte.<anonymous>' call
        // Inline function 'kotlin.UByte.toByte' call
        var this_1 = toUByte(input);
        tmp$ret$2 = _UByte___get_data__impl__jof9qr(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          this_0.i1s("Failed to parse type '" + 'UByte' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  protoOf(JsonDecoderForUnsignedTypes).zn = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.o1v_1;
      var input = this_0.n1t();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeShort.<anonymous>' call
        // Inline function 'kotlin.UShort.toShort' call
        var this_1 = toUShort(input);
        tmp$ret$2 = _UShort___get_data__impl__g0245(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          this_0.i1s("Failed to parse type '" + 'UShort' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  function get_unsignedNumberDescriptors() {
    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
    return unsignedNumberDescriptors;
  }
  var unsignedNumberDescriptors;
  function StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, $this) {
    StreamingJsonEncoder.call($this, Composer_0(output, json), json, mode, modeReuseCache);
    return $this;
  }
  function StreamingJsonEncoder_init_$Create$(output, json, mode, modeReuseCache) {
    return StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, objectCreate(protoOf(StreamingJsonEncoder)));
  }
  function encodeTypeInfo($this, discriminator, serialName) {
    $this.w1s_1.c1r();
    $this.mp(discriminator);
    $this.w1s_1.f1r(_Char___init__impl__6a9atx(58));
    $this.w1s_1.e1r();
    $this.mp(serialName);
  }
  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
    AbstractEncoder.call(this);
    this.w1s_1 = composer;
    this.x1s_1 = json;
    this.y1s_1 = mode;
    this.z1s_1 = modeReuseCache;
    this.a1t_1 = this.x1s_1.sl();
    this.b1t_1 = this.x1s_1.h1n_1;
    this.c1t_1 = false;
    this.d1t_1 = null;
    this.e1t_1 = null;
    var i = this.y1s_1.v2_1;
    if (!(this.z1s_1 == null)) {
      if (!(this.z1s_1[i] === null) || !(this.z1s_1[i] === this)) {
        this.z1s_1[i] = this;
      }
    }
  }
  protoOf(StreamingJsonEncoder).n1p = function () {
    return this.x1s_1;
  };
  protoOf(StreamingJsonEncoder).sl = function () {
    return this.a1t_1;
  };
  protoOf(StreamingJsonEncoder).eq = function (descriptor, index) {
    return this.b1t_1.w1o_1;
  };
  protoOf(StreamingJsonEncoder).tl = function (serializer, value) {
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
      if (this.n1p().h1n_1.e1p_1) {
        serializer.ul(this, value);
        break $l$block;
      }
      var isPolymorphicSerializer = serializer instanceof AbstractPolymorphicSerializer;
      var tmp;
      if (isPolymorphicSerializer) {
        tmp = !this.n1p().h1n_1.m1p_1.equals(ClassDiscriminatorMode_NONE_getInstance());
      } else {
        var tmp_0;
        switch (this.n1p().h1n_1.m1p_1.v2_1) {
          case 0:
          case 2:
            tmp_0 = false;
            break;
          case 1:
            // Inline function 'kotlin.let' call

            // Inline function 'kotlin.contracts.contract' call

            // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically.<anonymous>' call

            var it = serializer.hl().um();
            tmp_0 = equals(it, CLASS_getInstance()) || equals(it, OBJECT_getInstance());
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp = tmp_0;
      }
      var needDiscriminator = tmp;
      var baseClassDiscriminator = needDiscriminator ? classDiscriminator(serializer.hl(), this.n1p()) : null;
      var tmp_1;
      if (isPolymorphicSerializer) {
        var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
        $l$block_0: {
          // Inline function 'kotlin.requireNotNull' call
          // Inline function 'kotlin.contracts.contract' call
          if (value == null) {
            // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically.<anonymous>' call
            var message = 'Value for serializer ' + toString(serializer.hl()) + ' should always be non-null. Please report issue to the kotlinx.serialization tracker.';
            throw IllegalArgumentException_init_$Create$(toString(message));
          } else {
            break $l$block_0;
          }
        }
        var actual = findPolymorphicSerializer_0(casted, this, value);
        if (!(baseClassDiscriminator == null)) {
          validateIfSealed$accessor$1rk9rdt(serializer, actual, baseClassDiscriminator);
        }
        checkKind(actual.hl().um());
        tmp_1 = isInterface(actual, SerializationStrategy) ? actual : THROW_CCE();
      } else {
        tmp_1 = serializer;
      }
      var actualSerializer = tmp_1;
      if (!(baseClassDiscriminator == null)) {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.encodeSerializableValue.<anonymous>' call
        var serialName = actualSerializer.hl().om();
        this.d1t_1 = baseClassDiscriminator;
        this.e1t_1 = serialName;
      }
      actualSerializer.ul(this, value);
    }
  };
  protoOf(StreamingJsonEncoder).jo = function (descriptor) {
    var newMode = switchMode(this.x1s_1, descriptor);
    if (!(newMode.k1v_1 === _Char___init__impl__6a9atx(0))) {
      this.w1s_1.f1r(newMode.k1v_1);
      this.w1s_1.a1r();
    }
    var discriminator = this.d1t_1;
    if (!(discriminator == null)) {
      var tmp0_elvis_lhs = this.e1t_1;
      encodeTypeInfo(this, discriminator, tmp0_elvis_lhs == null ? descriptor.om() : tmp0_elvis_lhs);
      this.d1t_1 = null;
      this.e1t_1 = null;
    }
    if (this.y1s_1.equals(newMode)) {
      return this;
    }
    var tmp25_safe_receiver = this.z1s_1;
    var tmp1_elvis_lhs = tmp25_safe_receiver == null ? null : tmp25_safe_receiver[newMode.v2_1];
    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this.w1s_1, this.x1s_1, newMode, this.z1s_1) : tmp1_elvis_lhs;
  };
  protoOf(StreamingJsonEncoder).ko = function (descriptor) {
    if (!(this.y1s_1.l1v_1 === _Char___init__impl__6a9atx(0))) {
      this.w1s_1.b1r();
      this.w1s_1.d1r();
      this.w1s_1.f1r(this.y1s_1.l1v_1);
    }
  };
  protoOf(StreamingJsonEncoder).bp = function (descriptor, index) {
    switch (this.y1s_1.v2_1) {
      case 1:
        if (!this.w1s_1.z1q_1) {
          this.w1s_1.f1r(_Char___init__impl__6a9atx(44));
        }

        this.w1s_1.c1r();
        break;
      case 2:
        if (!this.w1s_1.z1q_1) {
          var tmp = this;
          var tmp_0;
          if ((index % 2 | 0) === 0) {
            this.w1s_1.f1r(_Char___init__impl__6a9atx(44));
            this.w1s_1.c1r();
            tmp_0 = true;
          } else {
            this.w1s_1.f1r(_Char___init__impl__6a9atx(58));
            this.w1s_1.e1r();
            tmp_0 = false;
          }
          tmp.c1t_1 = tmp_0;
        } else {
          this.c1t_1 = true;
          this.w1s_1.c1r();
        }

        break;
      case 3:
        if (index === 0)
          this.c1t_1 = true;
        if (index === 1) {
          this.w1s_1.f1r(_Char___init__impl__6a9atx(44));
          this.w1s_1.e1r();
          this.c1t_1 = false;
        }

        break;
      default:
        if (!this.w1s_1.z1q_1) {
          this.w1s_1.f1r(_Char___init__impl__6a9atx(44));
        }

        this.w1s_1.c1r();
        this.mp(getJsonElementName(descriptor, this.x1s_1, index));
        this.w1s_1.f1r(_Char___init__impl__6a9atx(58));
        this.w1s_1.e1r();
        break;
    }
    return true;
  };
  protoOf(StreamingJsonEncoder).aq = function (descriptor, index, serializer, value) {
    if (!(value == null) || this.b1t_1.b1p_1) {
      protoOf(AbstractEncoder).aq.call(this, descriptor, index, serializer, value);
    }
  };
  protoOf(StreamingJsonEncoder).op = function (descriptor) {
    var tmp;
    if (get_isUnsignedNumber(descriptor)) {
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.composerAs' call
      var tmp_0;
      var tmp_1 = this.w1s_1;
      if (tmp_1 instanceof ComposerForUnsignedNumbers) {
        tmp_0 = this.w1s_1;
      } else {
        var p0 = this.w1s_1.y1q_1;
        var p1 = this.c1t_1;
        tmp_0 = new ComposerForUnsignedNumbers(p0, p1);
      }
      var tmp$ret$1 = tmp_0;
      tmp = new StreamingJsonEncoder(tmp$ret$1, this.x1s_1, this.y1s_1, null);
    } else if (get_isUnquotedLiteral(descriptor)) {
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.composerAs' call
      var tmp_2;
      var tmp_3 = this.w1s_1;
      if (tmp_3 instanceof ComposerForUnquotedLiterals) {
        tmp_2 = this.w1s_1;
      } else {
        var p0_0 = this.w1s_1.y1q_1;
        var p1_0 = this.c1t_1;
        tmp_2 = new ComposerForUnquotedLiterals(p0_0, p1_0);
      }
      var tmp$ret$3 = tmp_2;
      tmp = new StreamingJsonEncoder(tmp$ret$3, this.x1s_1, this.y1s_1, null);
    } else if (!(this.d1t_1 == null)) {
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.encodeInline.<anonymous>' call
      this.e1t_1 = descriptor.om();
      tmp = this;
    } else {
      tmp = protoOf(AbstractEncoder).op.call(this, descriptor);
    }
    return tmp;
  };
  protoOf(StreamingJsonEncoder).dp = function () {
    this.w1s_1.h1r('null');
  };
  protoOf(StreamingJsonEncoder).ep = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.q1r(value);
    }
  };
  protoOf(StreamingJsonEncoder).fp = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.l1r(value);
    }
  };
  protoOf(StreamingJsonEncoder).gp = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.n1r(value);
    }
  };
  protoOf(StreamingJsonEncoder).hp = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.o1r(value);
    }
  };
  protoOf(StreamingJsonEncoder).ip = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.p1r(value);
    }
  };
  protoOf(StreamingJsonEncoder).jp = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.j1r(value);
    }
    if (!this.b1t_1.g1p_1 && !isFinite(value)) {
      throw InvalidFloatingPointEncoded_0(value, toString(this.w1s_1.y1q_1));
    }
  };
  protoOf(StreamingJsonEncoder).kp = function (value) {
    if (this.c1t_1) {
      this.mp(value.toString());
    } else {
      this.w1s_1.k1r(value);
    }
    if (!this.b1t_1.g1p_1 && !isFinite_0(value)) {
      throw InvalidFloatingPointEncoded_0(value, toString(this.w1s_1.y1q_1));
    }
  };
  protoOf(StreamingJsonEncoder).lp = function (value) {
    this.mp(toString_1(value));
  };
  protoOf(StreamingJsonEncoder).mp = function (value) {
    return this.w1s_1.r1r(value);
  };
  protoOf(StreamingJsonEncoder).np = function (enumDescriptor, index) {
    this.mp(enumDescriptor.pm(index));
  };
  function get_isUnsignedNumber(_this__u8e3s4) {
    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
    return _this__u8e3s4.vm() && get_unsignedNumberDescriptors().w1(_this__u8e3s4);
  }
  function get_isUnquotedLiteral(_this__u8e3s4) {
    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
    return _this__u8e3s4.vm() && equals(_this__u8e3s4, get_jsonUnquotedLiteralDescriptor());
  }
  var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
  function _init_properties_StreamingJsonEncoder_kt__pn1bsi() {
    if (!properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
      properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
      unsignedNumberDescriptors = setOf([serializer_1(Companion_getInstance_0()).hl(), serializer_0(Companion_getInstance()).hl(), serializer_2(Companion_getInstance_1()).hl(), serializer_3(Companion_getInstance_2()).hl()]);
    }
  }
  function get_ESCAPE_STRINGS() {
    _init_properties_StringOps_kt__fcy1db();
    return ESCAPE_STRINGS;
  }
  var ESCAPE_STRINGS;
  var ESCAPE_MARKERS;
  function toHexChar(i) {
    _init_properties_StringOps_kt__fcy1db();
    var d = i & 15;
    var tmp;
    if (d < 10) {
      // Inline function 'kotlin.code' call
      var this_0 = _Char___init__impl__6a9atx(48);
      var tmp$ret$0 = Char__toInt_impl_vasixd(this_0);
      tmp = numberToChar(d + tmp$ret$0 | 0);
    } else {
      var tmp_0 = d - 10 | 0;
      // Inline function 'kotlin.code' call
      var this_1 = _Char___init__impl__6a9atx(97);
      var tmp$ret$1 = Char__toInt_impl_vasixd(this_1);
      tmp = numberToChar(tmp_0 + tmp$ret$1 | 0);
    }
    return tmp;
  }
  function printQuoted(_this__u8e3s4, value) {
    _init_properties_StringOps_kt__fcy1db();
    _this__u8e3s4.t8(_Char___init__impl__6a9atx(34));
    var lastPos = 0;
    var inductionVariable = 0;
    var last = charSequenceLength(value) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.code' call
        var this_0 = charSequenceGet(value, i);
        var c = Char__toInt_impl_vasixd(this_0);
        if (c < get_ESCAPE_STRINGS().length && !(get_ESCAPE_STRINGS()[c] == null)) {
          _this__u8e3s4.zb(value, lastPos, i);
          _this__u8e3s4.s8(get_ESCAPE_STRINGS()[c]);
          lastPos = i + 1 | 0;
        }
      }
       while (inductionVariable <= last);
    if (!(lastPos === 0))
      _this__u8e3s4.zb(value, lastPos, value.length);
    else
      _this__u8e3s4.s8(value);
    _this__u8e3s4.t8(_Char___init__impl__6a9atx(34));
  }
  function toBooleanStrictOrNull_0(_this__u8e3s4) {
    _init_properties_StringOps_kt__fcy1db();
    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
  }
  var properties_initialized_StringOps_kt_wzaea7;
  function _init_properties_StringOps_kt__fcy1db() {
    if (!properties_initialized_StringOps_kt_wzaea7) {
      properties_initialized_StringOps_kt_wzaea7 = true;
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.arrayOfNulls' call
      var this_0 = fillArrayVal(Array(93), null);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.ESCAPE_STRINGS.<anonymous>' call
      var inductionVariable = 0;
      if (inductionVariable <= 31)
        do {
          var c = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var c1 = toHexChar(c >> 12);
          var c2 = toHexChar(c >> 8);
          var c3 = toHexChar(c >> 4);
          var c4 = toHexChar(c);
          this_0[c] = '\\u' + toString_1(c1) + toString_1(c2) + toString_1(c3) + toString_1(c4);
        }
         while (inductionVariable <= 31);
      // Inline function 'kotlin.code' call
      var this_1 = _Char___init__impl__6a9atx(34);
      this_0[Char__toInt_impl_vasixd(this_1)] = '\\"';
      // Inline function 'kotlin.code' call
      var this_2 = _Char___init__impl__6a9atx(92);
      this_0[Char__toInt_impl_vasixd(this_2)] = '\\\\';
      // Inline function 'kotlin.code' call
      var this_3 = _Char___init__impl__6a9atx(9);
      this_0[Char__toInt_impl_vasixd(this_3)] = '\\t';
      // Inline function 'kotlin.code' call
      var this_4 = _Char___init__impl__6a9atx(8);
      this_0[Char__toInt_impl_vasixd(this_4)] = '\\b';
      // Inline function 'kotlin.code' call
      var this_5 = _Char___init__impl__6a9atx(10);
      this_0[Char__toInt_impl_vasixd(this_5)] = '\\n';
      // Inline function 'kotlin.code' call
      var this_6 = _Char___init__impl__6a9atx(13);
      this_0[Char__toInt_impl_vasixd(this_6)] = '\\r';
      this_0[12] = '\\f';
      ESCAPE_STRINGS = this_0;
      // Inline function 'kotlin.apply' call
      var this_7 = new Int8Array(93);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.ESCAPE_MARKERS.<anonymous>' call
      var inductionVariable_0 = 0;
      if (inductionVariable_0 <= 31)
        do {
          var c_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          this_7[c_0] = 1;
        }
         while (inductionVariable_0 <= 31);
      // Inline function 'kotlin.code' call
      var this_8 = _Char___init__impl__6a9atx(34);
      this_7[Char__toInt_impl_vasixd(this_8)] = 34;
      // Inline function 'kotlin.code' call
      var this_9 = _Char___init__impl__6a9atx(92);
      this_7[Char__toInt_impl_vasixd(this_9)] = 92;
      // Inline function 'kotlin.code' call
      var this_10 = _Char___init__impl__6a9atx(9);
      this_7[Char__toInt_impl_vasixd(this_10)] = 116;
      // Inline function 'kotlin.code' call
      var this_11 = _Char___init__impl__6a9atx(8);
      this_7[Char__toInt_impl_vasixd(this_11)] = 98;
      // Inline function 'kotlin.code' call
      var this_12 = _Char___init__impl__6a9atx(10);
      this_7[Char__toInt_impl_vasixd(this_12)] = 110;
      // Inline function 'kotlin.code' call
      var this_13 = _Char___init__impl__6a9atx(13);
      this_7[Char__toInt_impl_vasixd(this_13)] = 114;
      this_7[12] = 102;
      ESCAPE_MARKERS = this_7;
    }
  }
  function unparsedPrimitive($this, literal, primitive, tag) {
    var type = startsWith(primitive, 'i') ? 'an ' + primitive : 'a ' + primitive;
    throw JsonDecodingException_0(-1, "Failed to parse literal '" + literal.toString() + "' as " + type + ' value at element: ' + $this.w1v(tag), toString($this.x1v()));
  }
  function AbstractJsonTreeDecoder(json, value, polymorphicDiscriminator) {
    polymorphicDiscriminator = polymorphicDiscriminator === VOID ? null : polymorphicDiscriminator;
    NamedValueDecoder.call(this);
    this.s1v_1 = json;
    this.t1v_1 = value;
    this.u1v_1 = polymorphicDiscriminator;
    this.v1v_1 = this.n1p().h1n_1;
  }
  protoOf(AbstractJsonTreeDecoder).n1p = function () {
    return this.s1v_1;
  };
  protoOf(AbstractJsonTreeDecoder).d2 = function () {
    return this.t1v_1;
  };
  protoOf(AbstractJsonTreeDecoder).sl = function () {
    return this.n1p().sl();
  };
  protoOf(AbstractJsonTreeDecoder).x1v = function () {
    var tmp28_safe_receiver = this.l12();
    var tmp;
    if (tmp28_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.currentObject.<anonymous>' call
      tmp = this.y1v(tmp28_safe_receiver);
    }
    var tmp0_elvis_lhs = tmp;
    return tmp0_elvis_lhs == null ? this.d2() : tmp0_elvis_lhs;
  };
  protoOf(AbstractJsonTreeDecoder).w1v = function (currentTag) {
    return this.j13() + ('.' + currentTag);
  };
  protoOf(AbstractJsonTreeDecoder).o1p = function () {
    return this.x1v();
  };
  protoOf(AbstractJsonTreeDecoder).wl = function (deserializer) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.decodeSerializableValuePolymorphic' call
      var tmp;
      if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.n1p().h1n_1.e1p_1;
      }
      if (tmp) {
        tmp$ret$0 = deserializer.vl(this);
        break $l$block;
      }
      var discriminator = classDiscriminator(deserializer.hl(), this.n1p());
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.o1p();
      var serialName = deserializer.hl().om();
      if (!(value instanceof JsonObject)) {
        var tmp_0 = getKClass(JsonObject).qa();
        var tmp_1 = getKClassFromExpression(value).qa();
        var tmp$ret$1 = this.j13();
        throw JsonDecodingException_0(-1, 'Expected ' + tmp_0 + ', but had ' + tmp_1 + ' as the serialized body of ' + serialName + ' at element: ' + tmp$ret$1, toString(value));
      }
      var jsonTree = value;
      var tmp16_safe_receiver = jsonTree.z1p(discriminator);
      var tmp17_safe_receiver = tmp16_safe_receiver == null ? null : get_jsonPrimitive(tmp16_safe_receiver);
      var type = tmp17_safe_receiver == null ? null : get_contentOrNull(tmp17_safe_receiver);
      var tmp_2;
      try {
        tmp_2 = findPolymorphicSerializer(deserializer, this, type);
      } catch ($p) {
        var tmp_3;
        if ($p instanceof SerializationException) {
          var it = $p;
          throw JsonDecodingException_0(-1, ensureNotNull(it.message), jsonTree.toString());
        } else {
          throw $p;
        }
      }
      var tmp_4 = tmp_2;
      var actualSerializer = isInterface(tmp_4, DeserializationStrategy) ? tmp_4 : THROW_CCE();
      tmp$ret$0 = readPolymorphicJson(this.n1p(), discriminator, jsonTree, actualSerializer);
    }
    return tmp$ret$0;
  };
  protoOf(AbstractJsonTreeDecoder).m12 = function (parentName, childName) {
    return childName;
  };
  protoOf(AbstractJsonTreeDecoder).jo = function (descriptor) {
    var currentObject = this.x1v();
    var tmp29_subject = descriptor.um();
    var tmp;
    var tmp_0;
    if (equals(tmp29_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp29_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this.n1p();
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var serialName = descriptor.om();
      if (!(currentObject instanceof JsonArray)) {
        var tmp_2 = getKClass(JsonArray).qa();
        var tmp_3 = getKClassFromExpression(currentObject).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.j13();
        throw JsonDecodingException_0(-1, 'Expected ' + tmp_2 + ', but had ' + tmp_3 + ' as the serialized body of ' + serialName + ' at element: ' + tmp$ret$0, toString(currentObject));
      }
      tmp = new JsonTreeListDecoder(tmp_1, currentObject);
    } else {
      if (equals(tmp29_subject, MAP_getInstance())) {
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var this_0 = this.n1p();
        var keyDescriptor = carrierDescriptor(descriptor.sm(0), this_0.sl());
        var keyKind = keyDescriptor.um();
        var tmp_4;
        var tmp_5;
        if (keyKind instanceof PrimitiveKind) {
          tmp_5 = true;
        } else {
          tmp_5 = equals(keyKind, ENUM_getInstance());
        }
        if (tmp_5) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
          var tmp_6 = this.n1p();
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
          // Inline function 'kotlinx.serialization.json.internal.cast' call
          var serialName_0 = descriptor.om();
          if (!(currentObject instanceof JsonObject)) {
            var tmp_7 = getKClass(JsonObject).qa();
            var tmp_8 = getKClassFromExpression(currentObject).qa();
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
            var tmp$ret$3 = this.j13();
            throw JsonDecodingException_0(-1, 'Expected ' + tmp_7 + ', but had ' + tmp_8 + ' as the serialized body of ' + serialName_0 + ' at element: ' + tmp$ret$3, toString(currentObject));
          }
          tmp_4 = new JsonTreeMapDecoder(tmp_6, currentObject);
        } else {
          if (this_0.h1n_1.z1o_1) {
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
            var tmp_9 = this.n1p();
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
            // Inline function 'kotlinx.serialization.json.internal.cast' call
            var serialName_1 = descriptor.om();
            if (!(currentObject instanceof JsonArray)) {
              var tmp_10 = getKClass(JsonArray).qa();
              var tmp_11 = getKClassFromExpression(currentObject).qa();
              // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
              var tmp$ret$7 = this.j13();
              throw JsonDecodingException_0(-1, 'Expected ' + tmp_10 + ', but had ' + tmp_11 + ' as the serialized body of ' + serialName_1 + ' at element: ' + tmp$ret$7, toString(currentObject));
            }
            tmp_4 = new JsonTreeListDecoder(tmp_9, currentObject);
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp = tmp_4;
      } else {
        var tmp_12 = this.n1p();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
        // Inline function 'kotlinx.serialization.json.internal.cast' call
        var serialName_2 = descriptor.om();
        if (!(currentObject instanceof JsonObject)) {
          var tmp_13 = getKClass(JsonObject).qa();
          var tmp_14 = getKClassFromExpression(currentObject).qa();
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
          var tmp$ret$12 = this.j13();
          throw JsonDecodingException_0(-1, 'Expected ' + tmp_13 + ', but had ' + tmp_14 + ' as the serialized body of ' + serialName_2 + ' at element: ' + tmp$ret$12, toString(currentObject));
        }
        tmp = new JsonTreeDecoder(tmp_12, currentObject, this.u1v_1);
      }
    }
    return tmp;
  };
  protoOf(AbstractJsonTreeDecoder).ko = function (descriptor) {
  };
  protoOf(AbstractJsonTreeDecoder).vn = function () {
    var tmp = this.x1v();
    return !(tmp instanceof JsonNull);
  };
  protoOf(AbstractJsonTreeDecoder).z1v = function (tag, enumDescriptor) {
    var tmp = this.n1p();
    // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
    // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
    var value = this.y1v(tag);
    // Inline function 'kotlinx.serialization.json.internal.cast' call
    var serialName = enumDescriptor.om();
    if (!(value instanceof JsonPrimitive)) {
      var tmp_0 = getKClass(JsonPrimitive).qa();
      var tmp_1 = getKClassFromExpression(value).qa();
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
      var tmp$ret$0 = this.w1v(tag);
      throw JsonDecodingException_0(-1, 'Expected ' + tmp_0 + ', but had ' + tmp_1 + ' as the serialized body of ' + serialName + ' at element: ' + tmp$ret$0, toString(value));
    }
    return getJsonNameIndexOrThrow(enumDescriptor, tmp, value.q1p());
  };
  protoOf(AbstractJsonTreeDecoder).v13 = function (tag, enumDescriptor) {
    return this.z1v((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), enumDescriptor);
  };
  protoOf(AbstractJsonTreeDecoder).a1w = function (tag) {
    return !(this.y1v(tag) === JsonNull_getInstance());
  };
  protoOf(AbstractJsonTreeDecoder).l13 = function (tag) {
    return this.a1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).b1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'boolean' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        var tmp0_elvis_lhs = get_booleanOrNull(literal);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'boolean', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'boolean', tag);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$4;
  };
  protoOf(AbstractJsonTreeDecoder).m13 = function (tag) {
    return this.b1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).c1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'byte' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedByte.<anonymous>' call
        var result = get_int(literal);
        var tmp0_elvis_lhs = (-128 <= result ? result <= 127 : false) ? toByte(result) : null;
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'byte', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'byte', tag);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$4;
  };
  protoOf(AbstractJsonTreeDecoder).n13 = function (tag) {
    return this.c1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).d1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'short' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedShort.<anonymous>' call
        var result = get_int(literal);
        var tmp0_elvis_lhs = (-32768 <= result ? result <= 32767 : false) ? toShort(result) : null;
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'short', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'short', tag);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$4;
  };
  protoOf(AbstractJsonTreeDecoder).o13 = function (tag) {
    return this.d1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).e1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'int' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedInt.<anonymous>' call
        var tmp0_elvis_lhs = get_int(literal);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'int', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'int', tag);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$4;
  };
  protoOf(AbstractJsonTreeDecoder).p13 = function (tag) {
    return this.e1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).f1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'long' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedLong.<anonymous>' call
        var tmp0_elvis_lhs = get_long(literal);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'long', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'long', tag);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$4;
  };
  protoOf(AbstractJsonTreeDecoder).q13 = function (tag) {
    return this.f1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).g1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'float' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedFloat.<anonymous>' call
        var tmp0_elvis_lhs = get_float(literal);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'float', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'float', tag);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.n1p().h1n_1.g1p_1;
    if (specialFp || isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(this.x1v()));
  };
  protoOf(AbstractJsonTreeDecoder).r13 = function (tag) {
    return this.g1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).h1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'double' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedDouble.<anonymous>' call
        var tmp0_elvis_lhs = get_double(literal);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'double', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'double', tag);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.n1p().h1n_1.g1p_1;
    if (specialFp || isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(this.x1v()));
  };
  protoOf(AbstractJsonTreeDecoder).s13 = function (tag) {
    return this.h1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).i1w = function (tag) {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var value = this.y1v(tag);
      if (!(value instanceof JsonPrimitive)) {
        var tmp = getKClass(JsonPrimitive).qa();
        var tmp_0 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'char' + ' at element: ' + tmp$ret$0, toString(value));
      }
      var literal = value;
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedChar.<anonymous>' call
        var tmp0_elvis_lhs = new Char(single(literal.q1p()));
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, literal, 'char', tag);
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        tmp$ret$4 = tmp_1.k1_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, literal, 'char', tag);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$4;
  };
  protoOf(AbstractJsonTreeDecoder).t13 = function (tag) {
    return this.i1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).j1w = function (tag) {
    // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
    // Inline function 'kotlinx.serialization.json.internal.cast' call
    var value = this.y1v(tag);
    if (!(value instanceof JsonPrimitive)) {
      var tmp = getKClass(JsonPrimitive).qa();
      var tmp_0 = getKClassFromExpression(value).qa();
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
      var tmp$ret$0 = this.w1v(tag);
      throw JsonDecodingException_0(-1, 'Expected ' + tmp + ', but had ' + tmp_0 + ' as the serialized body of ' + 'string' + ' at element: ' + tmp$ret$0, toString(value));
    }
    var value_0 = value;
    if (!(value_0 instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, "Expected string value for a non-null key '" + tag + "', got null literal instead at element: " + this.w1v(tag), toString(this.x1v()));
    if (!value_0.e1q_1 && !this.n1p().h1n_1.y1o_1) {
      throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted at element: " + this.w1v(tag) + ".\nUse 'isLenient = true' in 'Json {}' builder to accept non-compliant JSON.", toString(this.x1v()));
    }
    return value_0.g1q_1;
  };
  protoOf(AbstractJsonTreeDecoder).u13 = function (tag) {
    return this.j1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).k1w = function (tag, inlineDescriptor) {
    var tmp;
    if (get_isUnsignedNumber(inlineDescriptor)) {
      var tmp_0 = this.n1p();
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.getPrimitiveValue' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      var value = this.y1v(tag);
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var serialName = inlineDescriptor.om();
      if (!(value instanceof JsonPrimitive)) {
        var tmp_1 = getKClass(JsonPrimitive).qa();
        var tmp_2 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.w1v(tag);
        throw JsonDecodingException_0(-1, 'Expected ' + tmp_1 + ', but had ' + tmp_2 + ' as the serialized body of ' + serialName + ' at element: ' + tmp$ret$0, toString(value));
      }
      var lexer = StringJsonLexer_0(tmp_0, value.q1p());
      tmp = new JsonDecoderForUnsignedTypes(lexer, this.n1p());
    } else {
      tmp = protoOf(NamedValueDecoder).w13.call(this, tag, inlineDescriptor);
    }
    return tmp;
  };
  protoOf(AbstractJsonTreeDecoder).w13 = function (tag, inlineDescriptor) {
    return this.k1w((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  protoOf(AbstractJsonTreeDecoder).ho = function (descriptor) {
    return !(this.l12() == null) ? protoOf(NamedValueDecoder).ho.call(this, descriptor) : (new JsonPrimitiveDecoder(this.n1p(), this.d2(), this.u1v_1)).ho(descriptor);
  };
  function coerceInputValue_0($this, descriptor, index, tag) {
    var tmp$ret$1;
    $l$block_2: {
      // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue' call
      var this_0 = $this.n1p();
      var isOptional = descriptor.tm(index);
      var elementDescriptor = descriptor.sm(index);
      var tmp;
      if (isOptional && !elementDescriptor.km()) {
        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
        var tmp_0 = $this.y1v(tag);
        tmp = tmp_0 instanceof JsonNull;
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$1 = true;
        break $l$block_2;
      }
      if (equals(elementDescriptor.um(), ENUM_getInstance())) {
        var tmp_1;
        if (elementDescriptor.km()) {
          // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
          var tmp_2 = $this.y1v(tag);
          tmp_1 = tmp_2 instanceof JsonNull;
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp$ret$1 = false;
          break $l$block_2;
        }
        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
        var tmp_3 = $this.y1v(tag);
        var tmp30_safe_receiver = tmp_3 instanceof JsonPrimitive ? tmp_3 : null;
        var tmp0_elvis_lhs = tmp30_safe_receiver == null ? null : get_contentOrNull(tmp30_safe_receiver);
        var tmp_4;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$1 = false;
          break $l$block_2;
        } else {
          tmp_4 = tmp0_elvis_lhs;
        }
        var enumValue = tmp_4;
        var enumIndex = getJsonNameIndex(elementDescriptor, this_0, enumValue);
        var coerceToNull = !this_0.h1n_1.b1p_1 && elementDescriptor.km();
        if (enumIndex === -3 && (isOptional || coerceToNull)) {
          // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue.<anonymous>' call
          tmp$ret$1 = true;
          break $l$block_2;
        }
      }
      tmp$ret$1 = false;
    }
    return tmp$ret$1;
  }
  function absenceIsNull($this, descriptor, index) {
    $this.u1w_1 = (!$this.n1p().h1n_1.b1p_1 && !descriptor.tm(index) && descriptor.sm(index).km());
    return $this.u1w_1;
  }
  function JsonTreeDecoder(json, value, polymorphicDiscriminator, polyDescriptor) {
    polymorphicDiscriminator = polymorphicDiscriminator === VOID ? null : polymorphicDiscriminator;
    polyDescriptor = polyDescriptor === VOID ? null : polyDescriptor;
    AbstractJsonTreeDecoder.call(this, json, value, polymorphicDiscriminator);
    this.r1w_1 = value;
    this.s1w_1 = polyDescriptor;
    this.t1w_1 = 0;
    this.u1w_1 = false;
  }
  protoOf(JsonTreeDecoder).d2 = function () {
    return this.r1w_1;
  };
  protoOf(JsonTreeDecoder).zo = function (descriptor) {
    while (this.t1w_1 < descriptor.wm()) {
      var _unary__edvuaz = this.t1w_1;
      this.t1w_1 = _unary__edvuaz + 1 | 0;
      var name = this.h12(descriptor, _unary__edvuaz);
      var index = this.t1w_1 - 1 | 0;
      this.u1w_1 = false;
      var tmp;
      var tmp_0;
      // Inline function 'kotlin.collections.contains' call
      // Inline function 'kotlin.collections.containsKey' call
      var this_0 = this.d2();
      if ((isInterface(this_0, KtMap) ? this_0 : THROW_CCE()).e2(name)) {
        tmp_0 = true;
      } else {
        tmp_0 = absenceIsNull(this, descriptor, index);
      }
      if (tmp_0) {
        tmp = !this.v1v_1.d1p_1 || !coerceInputValue_0(this, descriptor, index, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return index;
      }
    }
    return -1;
  };
  protoOf(JsonTreeDecoder).vn = function () {
    return !this.u1w_1 && protoOf(AbstractJsonTreeDecoder).vn.call(this);
  };
  protoOf(JsonTreeDecoder).i12 = function (descriptor, index) {
    var strategy = namingStrategy(descriptor, this.n1p());
    var baseName = descriptor.pm(index);
    if (strategy == null) {
      if (!this.v1v_1.h1p_1)
        return baseName;
      if (this.d2().h2().w1(baseName))
        return baseName;
    }
    var deserializationNamesMap_0 = deserializationNamesMap(this.n1p(), descriptor);
    // Inline function 'kotlin.collections.find' call
    var this_0 = this.d2().h2();
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = this_0.n();
      while (tmp0_iterator.o()) {
        var element = tmp0_iterator.p();
        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.elementName.<anonymous>' call
        if (deserializationNamesMap_0.g2(element) === index) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp31_safe_receiver = tmp$ret$1;
    if (tmp31_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp31_safe_receiver;
    }
    var fallbackName = strategy == null ? null : strategy.m1s(descriptor, index, baseName);
    return fallbackName == null ? baseName : fallbackName;
  };
  protoOf(JsonTreeDecoder).y1v = function (tag) {
    return getValue(this.d2(), tag);
  };
  protoOf(JsonTreeDecoder).jo = function (descriptor) {
    if (descriptor === this.s1w_1) {
      var tmp = this.n1p();
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast' call
      var value = this.x1v();
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      var serialName = this.s1w_1.om();
      if (!(value instanceof JsonObject)) {
        var tmp_0 = getKClass(JsonObject).qa();
        var tmp_1 = getKClassFromExpression(value).qa();
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.cast.<anonymous>' call
        var tmp$ret$0 = this.j13();
        throw JsonDecodingException_0(-1, 'Expected ' + tmp_0 + ', but had ' + tmp_1 + ' as the serialized body of ' + serialName + ' at element: ' + tmp$ret$0, toString(value));
      }
      return new JsonTreeDecoder(tmp, value, this.u1v_1, this.s1w_1);
    }
    return protoOf(AbstractJsonTreeDecoder).jo.call(this, descriptor);
  };
  protoOf(JsonTreeDecoder).ko = function (descriptor) {
    var tmp;
    if (this.v1v_1.x1o_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.um();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_instance;
    var strategy = namingStrategy(descriptor, this.n1p());
    var tmp_1;
    if (strategy == null && !this.v1v_1.h1p_1) {
      tmp_1 = jsonCachedSerialNames(descriptor);
    } else if (!(strategy == null)) {
      tmp_1 = deserializationNamesMap(this.n1p(), descriptor).h2();
    } else {
      var tmp_2 = jsonCachedSerialNames(descriptor);
      // Inline function 'kotlin.collections.orEmpty' call
      var tmp33_safe_receiver = get_schemaCache(this.n1p()).x1u(descriptor, get_JsonDeserializationNamesKey());
      var tmp0_elvis_lhs = tmp33_safe_receiver == null ? null : tmp33_safe_receiver.h2();
      var tmp$ret$0 = tmp0_elvis_lhs == null ? emptySet() : tmp0_elvis_lhs;
      tmp_1 = plus_0(tmp_2, tmp$ret$0);
    }
    var names = tmp_1;
    var _iterator__ex2g4s = this.d2().h2().n();
    while (_iterator__ex2g4s.o()) {
      var key = _iterator__ex2g4s.p();
      if (!names.w1(key) && !(key === this.u1v_1)) {
        throw UnknownKeyException(key, this.d2().toString());
      }
    }
  };
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.b1x_1 = value;
    this.c1x_1 = this.b1x_1.q();
    this.d1x_1 = -1;
  }
  protoOf(JsonTreeListDecoder).d2 = function () {
    return this.b1x_1;
  };
  protoOf(JsonTreeListDecoder).i12 = function (descriptor, index) {
    return index.toString();
  };
  protoOf(JsonTreeListDecoder).y1v = function (tag) {
    return this.b1x_1.r(toInt(tag));
  };
  protoOf(JsonTreeListDecoder).zo = function (descriptor) {
    while (this.d1x_1 < (this.c1x_1 - 1 | 0)) {
      this.d1x_1 = this.d1x_1 + 1 | 0;
      return this.d1x_1;
    }
    return -1;
  };
  function JsonPrimitiveDecoder(json, value, polymorphicDiscriminator) {
    polymorphicDiscriminator = polymorphicDiscriminator === VOID ? null : polymorphicDiscriminator;
    AbstractJsonTreeDecoder.call(this, json, value, polymorphicDiscriminator);
    this.k1x_1 = value;
    this.d13('primitive');
  }
  protoOf(JsonPrimitiveDecoder).d2 = function () {
    return this.k1x_1;
  };
  protoOf(JsonPrimitiveDecoder).zo = function (descriptor) {
    return 0;
  };
  protoOf(JsonPrimitiveDecoder).y1v = function (tag) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(tag === 'primitive')) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveDecoder.currentElement.<anonymous>' call
      var message = "This input can only handle primitives with 'primitive' tag";
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return this.k1x_1;
  };
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder.call(this, json, value);
    this.v1x_1 = value;
    this.w1x_1 = toList(this.v1x_1.h2());
    this.x1x_1 = imul(this.w1x_1.q(), 2);
    this.y1x_1 = -1;
  }
  protoOf(JsonTreeMapDecoder).d2 = function () {
    return this.v1x_1;
  };
  protoOf(JsonTreeMapDecoder).i12 = function (descriptor, index) {
    var i = index / 2 | 0;
    return this.w1x_1.r(i);
  };
  protoOf(JsonTreeMapDecoder).zo = function (descriptor) {
    while (this.y1x_1 < (this.x1x_1 - 1 | 0)) {
      this.y1x_1 = this.y1x_1 + 1 | 0;
      return this.y1x_1;
    }
    return -1;
  };
  protoOf(JsonTreeMapDecoder).y1v = function (tag) {
    return (this.y1x_1 % 2 | 0) === 0 ? JsonPrimitive_1(tag) : getValue(this.v1x_1, tag);
  };
  protoOf(JsonTreeMapDecoder).ko = function (descriptor) {
  };
  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.hl())).wl(deserializer);
  }
  function writeJson(json, value, serializer) {
    var result = {_v: null};
    var encoder = new JsonTreeEncoder(json, writeJson$lambda(result));
    encoder.tl(serializer, value);
    var tmp;
    if (result._v == null) {
      throwUninitializedPropertyAccessException('result');
    } else {
      tmp = result._v;
    }
    return tmp;
  }
  function JsonTreeEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    var tmp = this;
    // Inline function 'kotlin.collections.linkedMapOf' call
    tmp.l1y_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(JsonTreeEncoder).m1y = function (key, element) {
    // Inline function 'kotlin.collections.set' call
    this.l1y_1.r2(key, element);
  };
  protoOf(JsonTreeEncoder).aq = function (descriptor, index, serializer, value) {
    if (!(value == null) || this.c1y_1.b1p_1) {
      protoOf(AbstractJsonTreeEncoder).aq.call(this, descriptor, index, serializer, value);
    }
  };
  protoOf(JsonTreeEncoder).n1y = function () {
    return new JsonObject(this.l1y_1);
  };
  function inlineUnsignedNumberEncoder($this, tag) {
    return new AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1($this, tag);
  }
  function inlineUnquotedLiteralEncoder($this, tag, inlineDescriptor) {
    return new AbstractJsonTreeEncoder$inlineUnquotedLiteralEncoder$1($this, tag, inlineDescriptor);
  }
  function AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1(this$0, $tag) {
    this.c1z_1 = this$0;
    this.d1z_1 = $tag;
    AbstractEncoder.call(this);
    this.b1z_1 = this$0.a1y_1.sl();
  }
  protoOf(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1).sl = function () {
    return this.b1z_1;
  };
  protoOf(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1).e1z = function (s) {
    return this.c1z_1.m1y(this.d1z_1, new JsonLiteral(s, false));
  };
  protoOf(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1).hp = function (value) {
    // Inline function 'kotlin.toUInt' call
    var tmp$ret$0 = _UInt___init__impl__l7qpdl(value);
    return this.e1z(UInt__toString_impl_dbgl21(tmp$ret$0));
  };
  protoOf(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1).ip = function (value) {
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0 = _ULong___init__impl__c78o9k(value);
    return this.e1z(ULong__toString_impl_f9au7k(tmp$ret$0));
  };
  protoOf(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1).fp = function (value) {
    // Inline function 'kotlin.toUByte' call
    var tmp$ret$0 = _UByte___init__impl__g9hnc4(value);
    return this.e1z(UByte__toString_impl_v72jg(tmp$ret$0));
  };
  protoOf(AbstractJsonTreeEncoder$inlineUnsignedNumberEncoder$1).gp = function (value) {
    // Inline function 'kotlin.toUShort' call
    var tmp$ret$0 = _UShort___init__impl__jigrne(value);
    return this.e1z(UShort__toString_impl_edaoee(tmp$ret$0));
  };
  function AbstractJsonTreeEncoder$inlineUnquotedLiteralEncoder$1(this$0, $tag, $inlineDescriptor) {
    this.f1z_1 = this$0;
    this.g1z_1 = $tag;
    this.h1z_1 = $inlineDescriptor;
    AbstractEncoder.call(this);
  }
  protoOf(AbstractJsonTreeEncoder$inlineUnquotedLiteralEncoder$1).sl = function () {
    return this.f1z_1.a1y_1.sl();
  };
  protoOf(AbstractJsonTreeEncoder$inlineUnquotedLiteralEncoder$1).mp = function (value) {
    return this.f1z_1.m1y(this.g1z_1, new JsonLiteral(value, false, this.h1z_1));
  };
  function AbstractJsonTreeEncoder$beginStructure$lambda(this$0) {
    return function (node) {
      this$0.m1y(this$0.c13(), node);
      return Unit_instance;
    };
  }
  function AbstractJsonTreeEncoder(json, nodeConsumer) {
    NamedValueEncoder.call(this);
    this.a1y_1 = json;
    this.b1y_1 = nodeConsumer;
    this.c1y_1 = this.a1y_1.h1n_1;
    this.d1y_1 = null;
    this.e1y_1 = null;
  }
  protoOf(AbstractJsonTreeEncoder).n1p = function () {
    return this.a1y_1;
  };
  protoOf(AbstractJsonTreeEncoder).sl = function () {
    return this.a1y_1.sl();
  };
  protoOf(AbstractJsonTreeEncoder).i12 = function (descriptor, index) {
    return getJsonElementName(descriptor, this.a1y_1, index);
  };
  protoOf(AbstractJsonTreeEncoder).eq = function (descriptor, index) {
    return this.c1y_1.w1o_1;
  };
  protoOf(AbstractJsonTreeEncoder).m12 = function (parentName, childName) {
    return childName;
  };
  protoOf(AbstractJsonTreeEncoder).cq = function () {
  };
  protoOf(AbstractJsonTreeEncoder).dp = function () {
    var tmp0_elvis_lhs = this.l12();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return this.b1y_1(JsonNull_getInstance());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var tag = tmp;
    this.o1y(tag);
  };
  protoOf(AbstractJsonTreeEncoder).o1y = function (tag) {
    return this.m1y(tag, JsonNull_getInstance());
  };
  protoOf(AbstractJsonTreeEncoder).p12 = function (tag) {
    return this.o1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeEncoder).p1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_2(value));
  };
  protoOf(AbstractJsonTreeEncoder).q12 = function (tag, value) {
    return this.p1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).q1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_2(value));
  };
  protoOf(AbstractJsonTreeEncoder).r12 = function (tag, value) {
    return this.q1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).r1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_2(value));
  };
  protoOf(AbstractJsonTreeEncoder).s12 = function (tag, value) {
    return this.r1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).s1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_2(value));
  };
  protoOf(AbstractJsonTreeEncoder).t12 = function (tag, value) {
    return this.s1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).t1y = function (tag, value) {
    this.m1y(tag, JsonPrimitive_2(value));
    if (!this.c1y_1.g1p_1 && !isFinite(value)) {
      throw InvalidFloatingPointEncoded(value, tag, toString(this.n1y()));
    }
  };
  protoOf(AbstractJsonTreeEncoder).u12 = function (tag, value) {
    return this.t1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).tl = function (serializer, value) {
    if (!(this.l12() == null) || !get_requiresTopLevelTag(carrierDescriptor(serializer.hl(), this.sl()))) {
      $l$block: {
        // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
        if (this.n1p().h1n_1.e1p_1) {
          serializer.ul(this, value);
          break $l$block;
        }
        var isPolymorphicSerializer = serializer instanceof AbstractPolymorphicSerializer;
        var tmp;
        if (isPolymorphicSerializer) {
          tmp = !this.n1p().h1n_1.m1p_1.equals(ClassDiscriminatorMode_NONE_getInstance());
        } else {
          var tmp_0;
          switch (this.n1p().h1n_1.m1p_1.v2_1) {
            case 0:
            case 2:
              tmp_0 = false;
              break;
            case 1:
              // Inline function 'kotlin.let' call

              // Inline function 'kotlin.contracts.contract' call

              // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically.<anonymous>' call

              var it = serializer.hl().um();
              tmp_0 = equals(it, CLASS_getInstance()) || equals(it, OBJECT_getInstance());
              break;
            default:
              noWhenBranchMatchedException();
              break;
          }
          tmp = tmp_0;
        }
        var needDiscriminator = tmp;
        var baseClassDiscriminator = needDiscriminator ? classDiscriminator(serializer.hl(), this.n1p()) : null;
        var tmp_1;
        if (isPolymorphicSerializer) {
          var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
          $l$block_0: {
            // Inline function 'kotlin.requireNotNull' call
            // Inline function 'kotlin.contracts.contract' call
            if (value == null) {
              // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically.<anonymous>' call
              var message = 'Value for serializer ' + toString(serializer.hl()) + ' should always be non-null. Please report issue to the kotlinx.serialization tracker.';
              throw IllegalArgumentException_init_$Create$(toString(message));
            } else {
              break $l$block_0;
            }
          }
          var actual = findPolymorphicSerializer_0(casted, this, value);
          if (!(baseClassDiscriminator == null)) {
            validateIfSealed$accessor$1rk9rdt(serializer, actual, baseClassDiscriminator);
          }
          checkKind(actual.hl().um());
          tmp_1 = isInterface(actual, SerializationStrategy) ? actual : THROW_CCE();
        } else {
          tmp_1 = serializer;
        }
        var actualSerializer = tmp_1;
        if (!(baseClassDiscriminator == null)) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
          var serialName = actualSerializer.hl().om();
          this.d1y_1 = baseClassDiscriminator;
          this.e1y_1 = serialName;
        }
        actualSerializer.ul(this, value);
      }
    } else {
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
      (new JsonPrimitiveEncoder(this.a1y_1, this.b1y_1)).tl(serializer, value);
    }
  };
  protoOf(AbstractJsonTreeEncoder).u1y = function (tag, value) {
    this.m1y(tag, JsonPrimitive_2(value));
    if (!this.c1y_1.g1p_1 && !isFinite_0(value)) {
      throw InvalidFloatingPointEncoded(value, tag, toString(this.n1y()));
    }
  };
  protoOf(AbstractJsonTreeEncoder).v12 = function (tag, value) {
    return this.u1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).v1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_0(value));
  };
  protoOf(AbstractJsonTreeEncoder).w12 = function (tag, value) {
    return this.v1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).w1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_1(toString_1(value)));
  };
  protoOf(AbstractJsonTreeEncoder).x12 = function (tag, value) {
    return this.w1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).x1y = function (tag, value) {
    return this.m1y(tag, JsonPrimitive_1(value));
  };
  protoOf(AbstractJsonTreeEncoder).y12 = function (tag, value) {
    return this.x1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).y1y = function (tag, enumDescriptor, ordinal) {
    return this.m1y(tag, JsonPrimitive_1(enumDescriptor.pm(ordinal)));
  };
  protoOf(AbstractJsonTreeEncoder).z12 = function (tag, enumDescriptor, ordinal) {
    return this.y1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), enumDescriptor, ordinal);
  };
  protoOf(AbstractJsonTreeEncoder).z1y = function (tag, value) {
    this.m1y(tag, JsonPrimitive_1(toString(value)));
  };
  protoOf(AbstractJsonTreeEncoder).n12 = function (tag, value) {
    return this.z1y((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).a1z = function (tag, inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? inlineUnsignedNumberEncoder(this, tag) : get_isUnquotedLiteral(inlineDescriptor) ? inlineUnquotedLiteralEncoder(this, tag, inlineDescriptor) : protoOf(NamedValueEncoder).a13.call(this, tag, inlineDescriptor);
  };
  protoOf(AbstractJsonTreeEncoder).a13 = function (tag, inlineDescriptor) {
    return this.a1z((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  protoOf(AbstractJsonTreeEncoder).op = function (descriptor) {
    var tmp;
    if (!(this.l12() == null)) {
      if (!(this.d1y_1 == null))
        this.e1y_1 = descriptor.om();
      tmp = protoOf(NamedValueEncoder).op.call(this, descriptor);
    } else {
      tmp = (new JsonPrimitiveEncoder(this.a1y_1, this.b1y_1)).op(descriptor);
    }
    return tmp;
  };
  protoOf(AbstractJsonTreeEncoder).jo = function (descriptor) {
    var tmp;
    if (this.l12() == null) {
      tmp = this.b1y_1;
    } else {
      tmp = AbstractJsonTreeEncoder$beginStructure$lambda(this);
    }
    var consumer = tmp;
    var tmp34_subject = descriptor.um();
    var tmp_0;
    var tmp_1;
    if (equals(tmp34_subject, LIST_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = tmp34_subject instanceof PolymorphicKind;
    }
    if (tmp_1) {
      tmp_0 = new JsonTreeListEncoder(this.a1y_1, consumer);
    } else {
      if (equals(tmp34_subject, MAP_getInstance())) {
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var this_0 = this.a1y_1;
        var keyDescriptor = carrierDescriptor(descriptor.sm(0), this_0.sl());
        var keyKind = keyDescriptor.um();
        var tmp_2;
        var tmp_3;
        if (keyKind instanceof PrimitiveKind) {
          tmp_3 = true;
        } else {
          tmp_3 = equals(keyKind, ENUM_getInstance());
        }
        if (tmp_3) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
          tmp_2 = new JsonTreeMapEncoder(this.a1y_1, consumer);
        } else {
          if (this_0.h1n_1.z1o_1) {
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
            tmp_2 = new JsonTreeListEncoder(this.a1y_1, consumer);
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp_0 = tmp_2;
      } else {
        tmp_0 = new JsonTreeEncoder(this.a1y_1, consumer);
      }
    }
    var encoder = tmp_0;
    var discriminator = this.d1y_1;
    if (!(discriminator == null)) {
      if (encoder instanceof JsonTreeMapEncoder) {
        encoder.m1y('key', JsonPrimitive_1(discriminator));
        var tmp0_elvis_lhs = this.e1y_1;
        encoder.m1y('value', JsonPrimitive_1(tmp0_elvis_lhs == null ? descriptor.om() : tmp0_elvis_lhs));
      } else {
        var tmp1_elvis_lhs = this.e1y_1;
        encoder.m1y(discriminator, JsonPrimitive_1(tmp1_elvis_lhs == null ? descriptor.om() : tmp1_elvis_lhs));
      }
      this.d1y_1 = null;
      this.e1y_1 = null;
    }
    return encoder;
  };
  protoOf(AbstractJsonTreeEncoder).b13 = function (descriptor) {
    this.b1y_1(this.n1y());
  };
  function get_requiresTopLevelTag(_this__u8e3s4) {
    var tmp;
    var tmp_0 = _this__u8e3s4.um();
    if (tmp_0 instanceof PrimitiveKind) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.um() === ENUM_getInstance();
    }
    return tmp;
  }
  function JsonPrimitiveEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    this.x1z_1 = null;
    this.d13('primitive');
  }
  protoOf(JsonPrimitiveEncoder).m1y = function (key, element) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(key === 'primitive')) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
      var message = "This output can only consume primitives with 'primitive' tag";
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.x1z_1 == null)) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
      var message_0 = 'Primitive element was already recorded. Does call to .encodeXxx happen more than once?';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    this.x1z_1 = element;
    this.b1y_1(element);
  };
  protoOf(JsonPrimitiveEncoder).n1y = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.requireNotNull' call
      var value = this.x1z_1;
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.getCurrent.<anonymous>' call
        var message = 'Primitive element has not been recorded. Is call to .encodeXxx is missing in serializer?';
        throw IllegalArgumentException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  };
  function JsonTreeListEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    var tmp = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp.e20_1 = ArrayList_init_$Create$();
  }
  protoOf(JsonTreeListEncoder).i12 = function (descriptor, index) {
    return index.toString();
  };
  protoOf(JsonTreeListEncoder).m1y = function (key, element) {
    var idx = toInt(key);
    this.e20_1.p2(idx, element);
  };
  protoOf(JsonTreeListEncoder).n1y = function () {
    return new JsonArray(this.e20_1);
  };
  function _get_tag__e6h4qf($this) {
    var tmp = $this.p1z_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('tag');
    }
  }
  function JsonTreeMapEncoder(json, nodeConsumer) {
    JsonTreeEncoder.call(this, json, nodeConsumer);
    this.q1z_1 = true;
  }
  protoOf(JsonTreeMapEncoder).m1y = function (key, element) {
    if (this.q1z_1) {
      var tmp = this;
      var tmp_0;
      if (element instanceof JsonPrimitive) {
        tmp_0 = element.q1p();
      } else {
        if (element instanceof JsonObject) {
          throw InvalidKeyKindException(JsonObjectSerializer_getInstance().k1q_1);
        } else {
          if (element instanceof JsonArray) {
            throw InvalidKeyKindException(JsonArraySerializer_getInstance().l1q_1);
          } else {
            noWhenBranchMatchedException();
          }
        }
      }
      tmp.p1z_1 = tmp_0;
      this.q1z_1 = false;
    } else {
      // Inline function 'kotlin.collections.set' call
      var this_0 = this.l1y_1;
      var key_0 = _get_tag__e6h4qf(this);
      this_0.r2(key_0, element);
      this.q1z_1 = true;
    }
  };
  protoOf(JsonTreeMapEncoder).n1y = function () {
    return new JsonObject(this.l1y_1);
  };
  function writeJson$lambda($result) {
    return function (it) {
      $result._v = it;
      return Unit_instance;
    };
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  function values() {
    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
  }
  function get_entries() {
    if ($ENTRIES == null)
      $ENTRIES = enumEntries(values());
    return $ENTRIES;
  }
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_instance;
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, _Char___init__impl__6a9atx(123), _Char___init__impl__6a9atx(125));
    WriteMode_LIST_instance = new WriteMode('LIST', 1, _Char___init__impl__6a9atx(91), _Char___init__impl__6a9atx(93));
    WriteMode_MAP_instance = new WriteMode('MAP', 2, _Char___init__impl__6a9atx(123), _Char___init__impl__6a9atx(125));
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, _Char___init__impl__6a9atx(91), _Char___init__impl__6a9atx(93));
  }
  var $ENTRIES;
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this.k1v_1 = begin;
    this.l1v_1 = end;
  }
  function switchMode(_this__u8e3s4, desc) {
    var tmp36_subject = desc.um();
    var tmp;
    if (tmp36_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals(tmp36_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals(tmp36_subject, MAP_getInstance())) {
          // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
          var keyDescriptor = carrierDescriptor(desc.sm(0), _this__u8e3s4.sl());
          var keyKind = keyDescriptor.um();
          var tmp_0;
          var tmp_1;
          if (keyKind instanceof PrimitiveKind) {
            tmp_1 = true;
          } else {
            tmp_1 = equals(keyKind, ENUM_getInstance());
          }
          if (tmp_1) {
            // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
            tmp_0 = WriteMode_MAP_getInstance();
          } else {
            if (_this__u8e3s4.h1n_1.z1o_1) {
              // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
              tmp_0 = WriteMode_LIST_getInstance();
            } else {
              throw InvalidKeyKindException(keyDescriptor);
            }
          }
          tmp = tmp_0;
        } else {
          tmp = WriteMode_OBJ_getInstance();
        }
      }
    }
    return tmp;
  }
  function carrierDescriptor(_this__u8e3s4, module_0) {
    var tmp;
    if (equals(_this__u8e3s4.um(), CONTEXTUAL_getInstance())) {
      var tmp37_safe_receiver = getContextualDescriptor(module_0, _this__u8e3s4);
      var tmp0_elvis_lhs = tmp37_safe_receiver == null ? null : carrierDescriptor(tmp37_safe_receiver, module_0);
      tmp = tmp0_elvis_lhs == null ? _this__u8e3s4 : tmp0_elvis_lhs;
    } else if (_this__u8e3s4.vm()) {
      tmp = carrierDescriptor(_this__u8e3s4.sm(0), module_0);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  function appendEscape($this, lastPosition, current) {
    $this.f20(lastPosition, current);
    return appendEsc($this, current + 1 | 0);
  }
  function decodedString($this, lastPosition, currentPosition) {
    $this.f20(lastPosition, currentPosition);
    var result = $this.b1o_1.toString();
    $this.b1o_1.ic(0);
    return result;
  }
  function takePeeked($this) {
    // Inline function 'kotlin.also' call
    var this_0 = ensureNotNull($this.a1o_1);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.takePeeked.<anonymous>' call
    $this.a1o_1 = null;
    return this_0;
  }
  function wasUnquotedString($this) {
    return !(charSequenceGet($this.g20(), $this.y1n_1 - 1 | 0) === _Char___init__impl__6a9atx(34));
  }
  function appendEsc($this, startPosition) {
    var currentPosition = startPosition;
    currentPosition = $this.h20(currentPosition);
    if (currentPosition === -1) {
      $this.i1s('Expected escape sequence to continue, got EOF');
    }
    var tmp = $this.g20();
    var _unary__edvuaz = currentPosition;
    currentPosition = _unary__edvuaz + 1 | 0;
    var currentChar = charSequenceGet(tmp, _unary__edvuaz);
    if (currentChar === _Char___init__impl__6a9atx(117)) {
      return appendHex($this, $this.g20(), currentPosition);
    }
    // Inline function 'kotlin.code' call
    var tmp$ret$0 = Char__toInt_impl_vasixd(currentChar);
    var c = escapeToChar(tmp$ret$0);
    if (c === _Char___init__impl__6a9atx(0)) {
      $this.i1s("Invalid escaped char '" + toString_1(currentChar) + "'");
    }
    $this.b1o_1.t8(c);
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    if ((startPos + 4 | 0) >= charSequenceLength(source)) {
      $this.y1n_1 = startPos;
      $this.i20();
      if (($this.y1n_1 + 4 | 0) >= charSequenceLength(source)) {
        $this.i1s('Unexpected EOF during unicode escape');
      }
      return appendHex($this, source, $this.y1n_1);
    }
    $this.b1o_1.t8(numberToChar((((fromHexChar($this, source, startPos) << 12) + (fromHexChar($this, source, startPos + 1 | 0) << 8) | 0) + (fromHexChar($this, source, startPos + 2 | 0) << 4) | 0) + fromHexChar($this, source, startPos + 3 | 0) | 0));
    return startPos + 4 | 0;
  }
  function fromHexChar($this, source, currentPosition) {
    var character = charSequenceGet(source, currentPosition);
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= character ? character <= _Char___init__impl__6a9atx(57) : false) {
      // Inline function 'kotlin.code' call
      var tmp_0 = Char__toInt_impl_vasixd(character);
      // Inline function 'kotlin.code' call
      var this_0 = _Char___init__impl__6a9atx(48);
      tmp = tmp_0 - Char__toInt_impl_vasixd(this_0) | 0;
    } else if (_Char___init__impl__6a9atx(97) <= character ? character <= _Char___init__impl__6a9atx(102) : false) {
      // Inline function 'kotlin.code' call
      var tmp_1 = Char__toInt_impl_vasixd(character);
      // Inline function 'kotlin.code' call
      var this_1 = _Char___init__impl__6a9atx(97);
      tmp = (tmp_1 - Char__toInt_impl_vasixd(this_1) | 0) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= character ? character <= _Char___init__impl__6a9atx(70) : false) {
      // Inline function 'kotlin.code' call
      var tmp_2 = Char__toInt_impl_vasixd(character);
      // Inline function 'kotlin.code' call
      var this_2 = _Char___init__impl__6a9atx(65);
      tmp = (tmp_2 - Char__toInt_impl_vasixd(this_2) | 0) + 10 | 0;
    } else {
      $this.i1s("Invalid toHexChar char '" + toString_1(character) + "' in unicode escape");
    }
    return tmp;
  }
  function consumeBoolean2($this, start) {
    var current = $this.h20(start);
    if (current >= charSequenceLength($this.g20()) || current === -1) {
      $this.i1s('EOF');
    }
    // Inline function 'kotlin.code' call
    var tmp = $this.g20();
    var _unary__edvuaz = current;
    current = _unary__edvuaz + 1 | 0;
    var this_0 = charSequenceGet(tmp, _unary__edvuaz);
    var tmp42_subject = Char__toInt_impl_vasixd(this_0) | 32;
    var tmp_0;
    // Inline function 'kotlin.code' call
    var this_1 = _Char___init__impl__6a9atx(116);
    if (tmp42_subject === Char__toInt_impl_vasixd(this_1)) {
      consumeBooleanLiteral($this, 'rue', current);
      tmp_0 = true;
    } else {
      // Inline function 'kotlin.code' call
      var this_2 = _Char___init__impl__6a9atx(102);
      if (tmp42_subject === Char__toInt_impl_vasixd(this_2)) {
        consumeBooleanLiteral($this, 'alse', current);
        tmp_0 = false;
      } else {
        $this.i1s("Expected valid boolean literal prefix, but had '" + $this.n1t() + "'");
      }
    }
    return tmp_0;
  }
  function consumeBooleanLiteral($this, literalSuffix, current) {
    if ((charSequenceLength($this.g20()) - current | 0) < literalSuffix.length) {
      $this.i1s('Unexpected end of boolean literal');
    }
    var inductionVariable = 0;
    var last = charSequenceLength(literalSuffix) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var expected = charSequenceGet(literalSuffix, i);
        var actual = charSequenceGet($this.g20(), current + i | 0);
        // Inline function 'kotlin.code' call
        var tmp = Char__toInt_impl_vasixd(expected);
        // Inline function 'kotlin.code' call
        if (!(tmp === (Char__toInt_impl_vasixd(actual) | 32))) {
          $this.i1s("Expected valid boolean literal prefix, but had '" + $this.n1t() + "'");
        }
      }
       while (inductionVariable <= last);
    $this.y1n_1 = current + literalSuffix.length | 0;
  }
  function consumeNumericLiteral$calculateExponent(exponentAccumulator, isExponentPositive) {
    var tmp;
    switch (isExponentPositive) {
      case false:
        // Inline function 'kotlin.math.pow' call

        var x = -exponentAccumulator.u3();
        tmp = Math.pow(10.0, x);
        break;
      case true:
        // Inline function 'kotlin.math.pow' call

        var x_0 = exponentAccumulator.u3();
        tmp = Math.pow(10.0, x_0);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function AbstractJsonLexer() {
    this.y1n_1 = 0;
    this.z1n_1 = new JsonPath();
    this.a1o_1 = null;
    this.b1o_1 = StringBuilder_init_$Create$();
  }
  protoOf(AbstractJsonLexer).i20 = function () {
  };
  protoOf(AbstractJsonLexer).a1v = function () {
    var current = this.j20();
    var source = this.g20();
    if (current >= charSequenceLength(source) || current === -1)
      return false;
    if (charSequenceGet(source, current) === _Char___init__impl__6a9atx(44)) {
      this.y1n_1 = this.y1n_1 + 1 | 0;
      return true;
    }
    return false;
  };
  protoOf(AbstractJsonLexer).k20 = function (c) {
    return c === _Char___init__impl__6a9atx(125) || c === _Char___init__impl__6a9atx(93) || (c === _Char___init__impl__6a9atx(58) || c === _Char___init__impl__6a9atx(44)) ? false : true;
  };
  protoOf(AbstractJsonLexer).c1o = function () {
    var nextToken = this.p1t();
    if (!(nextToken === 10)) {
      this.i1s('Expected EOF after parsing, but had ' + toString_1(charSequenceGet(this.g20(), this.y1n_1 - 1 | 0)) + ' instead');
    }
  };
  protoOf(AbstractJsonLexer).j1t = function (expected) {
    var token = this.p1t();
    if (!(token === expected)) {
      this.l20(expected);
    }
    return token;
  };
  protoOf(AbstractJsonLexer).m20 = function (expected) {
    if (this.y1n_1 > 0 && expected === _Char___init__impl__6a9atx(34)) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.withPositionRollback' call
        var snapshot = this.y1n_1;
        try {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.unexpectedToken.<anonymous>' call
          this.y1n_1 = this.y1n_1 - 1 | 0;
          tmp$ret$1 = this.n1t();
          break $l$block;
        }finally {
          this.y1n_1 = snapshot;
        }
      }
      var inputLiteral = tmp$ret$1;
      if (inputLiteral === 'null') {
        this.h1s("Expected string literal but 'null' literal was found", this.y1n_1 - 1 | 0, "Use 'coerceInputValues = true' in 'Json {}' builder to coerce nulls if property has a default value.");
      }
    }
    this.l20(charToTokenClass(expected));
  };
  protoOf(AbstractJsonLexer).n20 = function (expectedToken, wasConsumed) {
    var expected = tokenDescription(expectedToken);
    var position = wasConsumed ? this.y1n_1 - 1 | 0 : this.y1n_1;
    var s = this.y1n_1 === charSequenceLength(this.g20()) || position < 0 ? 'EOF' : toString_1(charSequenceGet(this.g20(), position));
    this.i1s('Expected ' + expected + ", but had '" + s + "' instead", position);
  };
  protoOf(AbstractJsonLexer).l20 = function (expectedToken, wasConsumed, $super) {
    wasConsumed = wasConsumed === VOID ? true : wasConsumed;
    return $super === VOID ? this.n20(expectedToken, wasConsumed) : $super.n20.call(this, expectedToken, wasConsumed);
  };
  protoOf(AbstractJsonLexer).k1t = function () {
    var source = this.g20();
    var cpos = this.y1n_1;
    $l$loop_0: while (true) {
      cpos = this.h20(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var ch = charSequenceGet(source, cpos);
      if (ch === _Char___init__impl__6a9atx(32) || ch === _Char___init__impl__6a9atx(10) || ch === _Char___init__impl__6a9atx(13) || ch === _Char___init__impl__6a9atx(9)) {
        cpos = cpos + 1 | 0;
        continue $l$loop_0;
      }
      this.y1n_1 = cpos;
      return charToTokenClass(ch);
    }
    this.y1n_1 = cpos;
    return 10;
  };
  protoOf(AbstractJsonLexer).b1v = function (doConsume) {
    var current = this.j20();
    current = this.h20(current);
    var len = charSequenceLength(this.g20()) - current | 0;
    if (len < 4 || current === -1)
      return false;
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(charSequenceGet('null', i) === charSequenceGet(this.g20(), current + i | 0)))
          return false;
      }
       while (inductionVariable <= 3);
    if (len > 4 && charToTokenClass(charSequenceGet(this.g20(), current + 4 | 0)) === 0)
      return false;
    if (doConsume) {
      this.y1n_1 = current + 4 | 0;
    }
    return true;
  };
  protoOf(AbstractJsonLexer).m1v = function (doConsume, $super) {
    doConsume = doConsume === VOID ? true : doConsume;
    return $super === VOID ? this.b1v(doConsume) : $super.b1v.call(this, doConsume);
  };
  protoOf(AbstractJsonLexer).c1v = function (isLenient) {
    var token = this.k1t();
    var tmp;
    if (isLenient) {
      if (!(token === 1) && !(token === 0))
        return null;
      tmp = this.n1t();
    } else {
      if (!(token === 1))
        return null;
      tmp = this.m1t();
    }
    var string = tmp;
    this.a1o_1 = string;
    return string;
  };
  protoOf(AbstractJsonLexer).o20 = function () {
    this.a1o_1 = null;
  };
  protoOf(AbstractJsonLexer).p20 = function (startPos, endPos) {
    // Inline function 'kotlin.text.substring' call
    var this_0 = this.g20();
    return toString(charSequenceSubSequence(this_0, startPos, endPos));
  };
  protoOf(AbstractJsonLexer).m1t = function () {
    if (!(this.a1o_1 == null)) {
      return takePeeked(this);
    }
    return this.f1v();
  };
  protoOf(AbstractJsonLexer).consumeString2 = function (source, startPosition, current) {
    var currentPosition = current;
    var lastPosition = startPosition;
    var char = charSequenceGet(source, currentPosition);
    var usedAppend = false;
    while (!(char === _Char___init__impl__6a9atx(34))) {
      if (char === _Char___init__impl__6a9atx(92)) {
        usedAppend = true;
        currentPosition = this.h20(appendEscape(this, lastPosition, currentPosition));
        if (currentPosition === -1) {
          this.i1s('Unexpected EOF', currentPosition);
        }
        lastPosition = currentPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= charSequenceLength(source)) {
          usedAppend = true;
          this.f20(lastPosition, currentPosition);
          currentPosition = this.h20(currentPosition);
          if (currentPosition === -1) {
            this.i1s('Unexpected EOF', currentPosition);
          }
          lastPosition = currentPosition;
        }
      }
      char = charSequenceGet(source, currentPosition);
    }
    var tmp;
    if (!usedAppend) {
      tmp = this.p20(lastPosition, currentPosition);
    } else {
      tmp = decodedString(this, lastPosition, currentPosition);
    }
    var string = tmp;
    this.y1n_1 = currentPosition + 1 | 0;
    return string;
  };
  protoOf(AbstractJsonLexer).g1v = function () {
    var result = this.n1t();
    if (result === 'null' && wasUnquotedString(this)) {
      this.i1s("Unexpected 'null' value instead of string literal");
    }
    return result;
  };
  protoOf(AbstractJsonLexer).n1t = function () {
    if (!(this.a1o_1 == null)) {
      return takePeeked(this);
    }
    var current = this.j20();
    if (current >= charSequenceLength(this.g20()) || current === -1) {
      this.i1s('EOF', current);
    }
    var token = charToTokenClass(charSequenceGet(this.g20(), current));
    if (token === 1) {
      return this.m1t();
    }
    if (!(token === 0)) {
      this.i1s('Expected beginning of the string, but got ' + toString_1(charSequenceGet(this.g20(), current)));
    }
    var usedAppend = false;
    while (charToTokenClass(charSequenceGet(this.g20(), current)) === 0) {
      current = current + 1 | 0;
      if (current >= charSequenceLength(this.g20())) {
        usedAppend = true;
        this.f20(this.y1n_1, current);
        var eof = this.h20(current);
        if (eof === -1) {
          this.y1n_1 = current;
          return decodedString(this, 0, 0);
        } else {
          current = eof;
        }
      }
    }
    var tmp;
    if (!usedAppend) {
      tmp = this.p20(this.y1n_1, current);
    } else {
      tmp = decodedString(this, this.y1n_1, current);
    }
    var result = tmp;
    this.y1n_1 = current;
    return result;
  };
  protoOf(AbstractJsonLexer).f20 = function (fromIndex, toIndex) {
    this.b1o_1.zb(this.g20(), fromIndex, toIndex);
  };
  protoOf(AbstractJsonLexer).e1v = function (allowLenientStrings) {
    // Inline function 'kotlin.collections.mutableListOf' call
    var tokenStack = ArrayList_init_$Create$();
    var lastToken = this.k1t();
    if (!(lastToken === 8) && !(lastToken === 6)) {
      this.n1t();
      return Unit_instance;
    }
    $l$loop: while (true) {
      lastToken = this.k1t();
      if (lastToken === 1) {
        if (allowLenientStrings)
          this.n1t();
        else
          this.f1v();
        continue $l$loop;
      }
      var tmp40_subject = lastToken;
      if (tmp40_subject === 8 || tmp40_subject === 6) {
        tokenStack.l(lastToken);
      } else if (tmp40_subject === 9) {
        if (!(last(tokenStack) === 8))
          throw JsonDecodingException_0(this.y1n_1, 'found ] instead of } at path: ' + this.z1n_1.toString(), this.g20());
        removeLast(tokenStack);
      } else if (tmp40_subject === 7) {
        if (!(last(tokenStack) === 6))
          throw JsonDecodingException_0(this.y1n_1, 'found } instead of ] at path: ' + this.z1n_1.toString(), this.g20());
        removeLast(tokenStack);
      } else if (tmp40_subject === 10) {
        this.i1s('Unexpected end of input due to malformed JSON during ignoring unknown keys');
      }
      this.p1t();
      if (tokenStack.q() === 0)
        return Unit_instance;
    }
  };
  protoOf(AbstractJsonLexer).toString = function () {
    return "JsonReader(source='" + toString(this.g20()) + "', currentPosition=" + this.y1n_1 + ')';
  };
  protoOf(AbstractJsonLexer).d1v = function (key) {
    var processed = this.p20(0, this.y1n_1);
    var lastIndexOf_0 = lastIndexOf(processed, key);
    this.h1s("Encountered an unknown key '" + key + "'", lastIndexOf_0, "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.");
  };
  protoOf(AbstractJsonLexer).h1s = function (message, position, hint) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(hint) === 0) {
      tmp = '';
    } else {
      tmp = '\n' + hint;
    }
    var hintMessage = tmp;
    throw JsonDecodingException_0(position, message + ' at path: ' + this.z1n_1.v1s() + hintMessage, this.g20());
  };
  protoOf(AbstractJsonLexer).i1s = function (message, position, hint, $super) {
    position = position === VOID ? this.y1n_1 : position;
    hint = hint === VOID ? '' : hint;
    return $super === VOID ? this.h1s(message, position, hint) : $super.h1s.call(this, message, position, hint);
  };
  protoOf(AbstractJsonLexer).d1q = function () {
    var current = this.j20();
    current = this.h20(current);
    if (current >= charSequenceLength(this.g20()) || current === -1) {
      this.i1s('EOF');
    }
    var tmp;
    if (charSequenceGet(this.g20(), current) === _Char___init__impl__6a9atx(34)) {
      current = current + 1 | 0;
      if (current === charSequenceLength(this.g20())) {
        this.i1s('EOF');
      }
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var accumulator = new Long(0, 0);
    var exponentAccumulator = new Long(0, 0);
    var isNegative = false;
    var isExponentPositive = false;
    var hasExponent = false;
    var start = current;
    $l$loop_4: while (!(current === charSequenceLength(this.g20()))) {
      var ch = charSequenceGet(this.g20(), current);
      if ((ch === _Char___init__impl__6a9atx(101) || ch === _Char___init__impl__6a9atx(69)) && !hasExponent) {
        if (current === start) {
          this.i1s('Unexpected symbol ' + toString_1(ch) + ' in numeric literal');
        }
        isExponentPositive = true;
        hasExponent = true;
        current = current + 1 | 0;
        continue $l$loop_4;
      }
      if (ch === _Char___init__impl__6a9atx(45) && hasExponent) {
        if (current === start) {
          this.i1s("Unexpected symbol '-' in numeric literal");
        }
        isExponentPositive = false;
        current = current + 1 | 0;
        continue $l$loop_4;
      }
      if (ch === _Char___init__impl__6a9atx(43) && hasExponent) {
        if (current === start) {
          this.i1s("Unexpected symbol '+' in numeric literal");
        }
        isExponentPositive = true;
        current = current + 1 | 0;
        continue $l$loop_4;
      }
      if (ch === _Char___init__impl__6a9atx(45)) {
        if (!(current === start)) {
          this.i1s("Unexpected symbol '-' in numeric literal");
        }
        isNegative = true;
        current = current + 1 | 0;
        continue $l$loop_4;
      }
      var token = charToTokenClass(ch);
      if (!(token === 0))
        break $l$loop_4;
      current = current + 1 | 0;
      var digit = Char__minus_impl_a2frrh(ch, _Char___init__impl__6a9atx(48));
      if (!(0 <= digit ? digit <= 9 : false)) {
        this.i1s("Unexpected symbol '" + toString_1(ch) + "' in numeric literal");
      }
      if (hasExponent) {
        // Inline function 'kotlin.Long.plus' call
        // Inline function 'kotlin.Long.times' call
        exponentAccumulator = exponentAccumulator.f3(toLong(10)).d3(toLong(digit));
        continue $l$loop_4;
      }
      // Inline function 'kotlin.Long.minus' call
      // Inline function 'kotlin.Long.times' call
      accumulator = accumulator.f3(toLong(10)).e3(toLong(digit));
      if (accumulator.g1(new Long(0, 0)) > 0) {
        this.i1s('Numeric value overflow');
      }
    }
    var hasChars = !(current === start);
    if (start === current || (isNegative && start === (current - 1 | 0))) {
      this.i1s('Expected numeric literal');
    }
    if (hasQuotation) {
      if (!hasChars) {
        this.i1s('EOF');
      }
      if (!(charSequenceGet(this.g20(), current) === _Char___init__impl__6a9atx(34))) {
        this.i1s('Expected closing quotation mark');
      }
      current = current + 1 | 0;
    }
    this.y1n_1 = current;
    if (hasExponent) {
      var doubleAccumulator = accumulator.u3() * consumeNumericLiteral$calculateExponent(exponentAccumulator, isExponentPositive);
      if (doubleAccumulator > (new Long(-1, 2147483647)).u3() || doubleAccumulator < (new Long(0, -2147483648)).u3()) {
        this.i1s('Numeric value overflow');
      }
      // Inline function 'kotlin.math.floor' call
      if (!(Math.floor(doubleAccumulator) === doubleAccumulator)) {
        this.i1s("Can't convert " + doubleAccumulator + ' to Long');
      }
      accumulator = numberToLong(doubleAccumulator);
    }
    var tmp_0;
    if (isNegative) {
      tmp_0 = accumulator;
    } else if (!accumulator.equals(new Long(0, -2147483648))) {
      tmp_0 = accumulator.j3();
    } else {
      this.i1s('Numeric value overflow');
    }
    return tmp_0;
  };
  protoOf(AbstractJsonLexer).n1v = function () {
    var current = this.j20();
    if (current === charSequenceLength(this.g20())) {
      this.i1s('EOF');
    }
    var tmp;
    if (charSequenceGet(this.g20(), current) === _Char___init__impl__6a9atx(34)) {
      current = current + 1 | 0;
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var result = consumeBoolean2(this, current);
    if (hasQuotation) {
      if (this.y1n_1 === charSequenceLength(this.g20())) {
        this.i1s('EOF');
      }
      if (!(charSequenceGet(this.g20(), this.y1n_1) === _Char___init__impl__6a9atx(34))) {
        this.i1s('Expected closing quotation mark');
      }
      this.y1n_1 = this.y1n_1 + 1 | 0;
    }
    return result;
  };
  function charToTokenClass(c) {
    var tmp;
    // Inline function 'kotlin.code' call
    if (Char__toInt_impl_vasixd(c) < 126) {
      var tmp_0 = CharMappings_getInstance().r20_1;
      // Inline function 'kotlin.code' call
      tmp = tmp_0[Char__toInt_impl_vasixd(c)];
    } else {
      tmp = 0;
    }
    return tmp;
  }
  function tokenDescription(token) {
    return token === 1 ? "quotation mark '\"'" : token === 2 ? "string escape sequence '\\'" : token === 4 ? "comma ','" : token === 5 ? "colon ':'" : token === 6 ? "start of the object '{'" : token === 7 ? "end of the object '}'" : token === 8 ? "start of the array '['" : token === 9 ? "end of the array ']'" : token === 10 ? 'end of the input' : token === 127 ? 'invalid token' : 'valid token';
  }
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance().q20_1[c] : _Char___init__impl__6a9atx(0);
  }
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 127);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!(esc === _Char___init__impl__6a9atx(117))) {
      // Inline function 'kotlin.code' call
      var tmp$ret$0 = Char__toInt_impl_vasixd(esc);
      $this.q20_1[tmp$ret$0] = numberToChar(c);
    }
  }
  function initC2ESC_0($this, c, esc) {
    // Inline function 'kotlin.code' call
    var tmp$ret$0 = Char__toInt_impl_vasixd(c);
    return initC2ESC($this, tmp$ret$0, esc);
  }
  function initC2TC($this, c, cl) {
    $this.r20_1[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    // Inline function 'kotlin.code' call
    var tmp$ret$0 = Char__toInt_impl_vasixd(c);
    return initC2TC($this, tmp$ret$0, cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this.q20_1 = charArray(117);
    this.r20_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function StringJsonLexerWithComments(source) {
    StringJsonLexer.call(this, source);
  }
  protoOf(StringJsonLexerWithComments).p1t = function () {
    var source = this.g20();
    var cpos = this.j20();
    if (cpos >= source.length || cpos === -1)
      return 10;
    this.y1n_1 = cpos + 1 | 0;
    return charToTokenClass(charSequenceGet(source, cpos));
  };
  protoOf(StringJsonLexerWithComments).l1t = function () {
    var current = this.j20();
    if (current >= this.g20().length || current === -1)
      return false;
    return this.k20(charSequenceGet(this.g20(), current));
  };
  protoOf(StringJsonLexerWithComments).z1u = function (expected) {
    var source = this.g20();
    var current = this.j20();
    if (current >= source.length || current === -1) {
      this.y1n_1 = -1;
      this.m20(expected);
    }
    var c = charSequenceGet(source, current);
    this.y1n_1 = current + 1 | 0;
    if (c === expected)
      return Unit_instance;
    else {
      this.m20(expected);
    }
  };
  protoOf(StringJsonLexerWithComments).k1t = function () {
    var source = this.g20();
    var cpos = this.j20();
    if (cpos >= source.length || cpos === -1)
      return 10;
    this.y1n_1 = cpos;
    return charToTokenClass(charSequenceGet(source, cpos));
  };
  protoOf(StringJsonLexerWithComments).j20 = function () {
    var current = this.y1n_1;
    if (current === -1)
      return current;
    var source = this.g20();
    $l$loop_1: while (current < source.length) {
      var c = charSequenceGet(source, current);
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.isWs' call
      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9)) {
        current = current + 1 | 0;
        continue $l$loop_1;
      }
      if (c === _Char___init__impl__6a9atx(47) && (current + 1 | 0) < source.length) {
        var tmp43_subject = charSequenceGet(source, current + 1 | 0);
        if (tmp43_subject === _Char___init__impl__6a9atx(47)) {
          current = indexOf_0(source, _Char___init__impl__6a9atx(10), current + 2 | 0);
          if (current === -1) {
            current = source.length;
          } else {
            current = current + 1 | 0;
          }
          continue $l$loop_1;
        } else if (tmp43_subject === _Char___init__impl__6a9atx(42)) {
          current = indexOf(source, '*/', current + 2 | 0);
          if (current === -1) {
            this.y1n_1 = source.length;
            this.i1s('Expected end of the block comment: "*/", but had EOF instead');
          } else {
            current = current + 2 | 0;
          }
          continue $l$loop_1;
        }
      }
      break $l$loop_1;
    }
    this.y1n_1 = current;
    return current;
  };
  function StringJsonLexer(source) {
    AbstractJsonLexer.call(this);
    this.b21_1 = source;
  }
  protoOf(StringJsonLexer).g20 = function () {
    return this.b21_1;
  };
  protoOf(StringJsonLexer).h20 = function (position) {
    return position < this.g20().length ? position : -1;
  };
  protoOf(StringJsonLexer).p1t = function () {
    var source = this.g20();
    var cpos = this.y1n_1;
    $l$loop: while (!(cpos === -1) && cpos < source.length) {
      var _unary__edvuaz = cpos;
      cpos = _unary__edvuaz + 1 | 0;
      var c = charSequenceGet(source, _unary__edvuaz);
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.isWs' call
      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9))
        continue $l$loop;
      this.y1n_1 = cpos;
      return charToTokenClass(c);
    }
    this.y1n_1 = source.length;
    return 10;
  };
  protoOf(StringJsonLexer).l1t = function () {
    var current = this.y1n_1;
    if (current === -1)
      return false;
    var source = this.g20();
    $l$loop: while (current < source.length) {
      var c = charSequenceGet(source, current);
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.isWs' call
      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9)) {
        current = current + 1 | 0;
        continue $l$loop;
      }
      this.y1n_1 = current;
      return this.k20(c);
    }
    this.y1n_1 = current;
    return false;
  };
  protoOf(StringJsonLexer).j20 = function () {
    var current = this.y1n_1;
    if (current === -1)
      return current;
    var source = this.g20();
    $l$loop: while (current < source.length) {
      var c = charSequenceGet(source, current);
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.isWs' call
      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9)) {
        current = current + 1 | 0;
      } else {
        break $l$loop;
      }
    }
    this.y1n_1 = current;
    return current;
  };
  protoOf(StringJsonLexer).z1u = function (expected) {
    if (this.y1n_1 === -1) {
      this.m20(expected);
    }
    var source = this.g20();
    var cpos = this.y1n_1;
    $l$loop: while (cpos < source.length) {
      var _unary__edvuaz = cpos;
      cpos = _unary__edvuaz + 1 | 0;
      var c = charSequenceGet(source, _unary__edvuaz);
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.isWs' call
      if (c === _Char___init__impl__6a9atx(32) || c === _Char___init__impl__6a9atx(10) || c === _Char___init__impl__6a9atx(13) || c === _Char___init__impl__6a9atx(9))
        continue $l$loop;
      this.y1n_1 = cpos;
      if (c === expected)
        return Unit_instance;
      this.m20(expected);
    }
    this.y1n_1 = -1;
    this.m20(expected);
  };
  protoOf(StringJsonLexer).f1v = function () {
    this.z1u(_Char___init__impl__6a9atx(34));
    var current = this.y1n_1;
    var closingQuote = indexOf_0(this.g20(), _Char___init__impl__6a9atx(34), current);
    if (closingQuote === -1) {
      this.n1t();
      this.n20(1, false);
    }
    var inductionVariable = current;
    if (inductionVariable < closingQuote)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (charSequenceGet(this.g20(), i) === _Char___init__impl__6a9atx(92)) {
          return this.consumeString2(this.g20(), this.y1n_1, i);
        }
      }
       while (inductionVariable < closingQuote);
    this.y1n_1 = closingQuote + 1 | 0;
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this.g20().substring(current, closingQuote);
  };
  protoOf(StringJsonLexer).h1v = function (keyToMatch, isLenient) {
    var positionSnapshot = this.y1n_1;
    try {
      if (!(this.p1t() === 6))
        return null;
      var firstKey = this.c1v(isLenient);
      if (!(firstKey === keyToMatch))
        return null;
      this.o20();
      if (!(this.p1t() === 5))
        return null;
      return this.c1v(isLenient);
    }finally {
      this.y1n_1 = positionSnapshot;
      this.o20();
    }
  };
  function StringJsonLexer_0(json, source) {
    return !json.h1n_1.l1p_1 ? new StringJsonLexer(source) : new StringJsonLexerWithComments(source);
  }
  function get_schemaCache(_this__u8e3s4) {
    return _this__u8e3s4.j1n_1;
  }
  function JsonToStringWriter() {
    this.o1n_1 = StringBuilder_init_$Create$_0(128);
  }
  protoOf(JsonToStringWriter).m1r = function (value) {
    this.o1n_1.ec(value);
  };
  protoOf(JsonToStringWriter).g1r = function (char) {
    this.o1n_1.t8(char);
  };
  protoOf(JsonToStringWriter).i1r = function (text) {
    this.o1n_1.s8(text);
  };
  protoOf(JsonToStringWriter).s1r = function (text) {
    printQuoted(this.o1n_1, text);
  };
  protoOf(JsonToStringWriter).p1n = function () {
    this.o1n_1.jc();
  };
  protoOf(JsonToStringWriter).toString = function () {
    return this.o1n_1.toString();
  };
  function createMapForCache(initialCapacity) {
    return HashMap_init_$Create$(initialCapacity);
  }
  //region block: post-declaration
  protoOf(defer$1).km = get_isNullable;
  protoOf(defer$1).vm = get_isInline;
  protoOf(defer$1).il = get_annotations;
  protoOf(PolymorphismValidator).h16 = contextual;
  //endregion
  //region block: init
  Companion_instance = new Companion();
  Companion_instance_0 = new Companion_0();
  Companion_instance_1 = new Companion_1();
  Companion_instance_2 = new Companion_2();
  Tombstone_instance = new Tombstone();
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = JsonElementSerializer_getInstance;
  _.$_$.b = JsonNull_getInstance;
  _.$_$.c = JsonObjectSerializer_getInstance;
  _.$_$.d = JsonArray;
  _.$_$.e = JsonElement;
  _.$_$.f = JsonNull;
  _.$_$.g = JsonObject;
  _.$_$.h = JsonPrimitive_3;
  _.$_$.i = JsonPrimitive_1;
  _.$_$.j = JsonPrimitive_2;
  _.$_$.k = JsonPrimitive_0;
  _.$_$.l = JsonPrimitive;
  _.$_$.m = Json_0;
  _.$_$.n = get_boolean;
  _.$_$.o = get_contentOrNull;
  _.$_$.p = get_double;
  _.$_$.q = get_float;
  _.$_$.r = get_int;
  _.$_$.s = get_jsonArray;
  _.$_$.t = get_jsonObject;
  _.$_$.u = get_jsonPrimitive;
  _.$_$.v = get_long;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlinx-serialization-kotlinx-serialization-json.js.map
