import { HashAlgorithm } from '../types';
export type RSASignatureSchemes = 'RSASSA-PKCS1-V1_5' | 'RSA-PSS';
export type RSAEncryptionSchemes = 'RSAES-PKCS-v1_5 ' | 'RSAES-OAEP';
export declare const signAlgorithmToSchemeAndHashAlg: (signingAlg: string) => {
    scheme: "RSASSA-PKCS1-V1_5" | "RSA-PSS";
    hashAlgorithm: HashAlgorithm;
};
export declare const cryptoSubtleImportRSAKey: (jwk: JsonWebKey, scheme: RSAEncryptionSchemes | RSASignatureSchemes, hashAlgorithm?: HashAlgorithm) => Promise<CryptoKey>;
export declare const generateRSAKeyAsPEM: (scheme: RSAEncryptionSchemes | RSASignatureSchemes, hashAlgorithm?: HashAlgorithm, modulusLength?: number) => Promise<string>;
//# sourceMappingURL=rsa-key.d.ts.map