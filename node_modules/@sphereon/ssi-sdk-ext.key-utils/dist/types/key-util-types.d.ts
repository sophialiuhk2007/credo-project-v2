import { IKey, MinimalImportableKey } from '@veramo/core';
export declare const JWK_JCS_PUB_NAME: "jwk_jcs-pub";
export declare const JWK_JCS_PUB_PREFIX = 60241;
export type TKeyType = 'Ed25519' | 'Secp256k1' | 'Secp256r1' | 'X25519' | 'Bls12381G1' | 'Bls12381G2' | 'RSA';
export declare enum Key {
    Ed25519 = "Ed25519",
    Secp256k1 = "Secp256k1",
    Secp256r1 = "Secp256r1"
}
export declare enum JwkKeyUse {
    Encryption = "enc",
    Signature = "sig"
}
export declare const SIG_KEY_ALGS: string[];
export declare const ENC_KEY_ALGS: string[];
export type KeyVisibility = 'public' | 'private';
export interface X509Opts {
    cn?: string;
    privateKeyPEM?: string;
    certificatePEM?: string;
    certificateChainURL?: string;
    certificateChainPEM?: string;
}
export interface IImportProvidedOrGeneratedKeyArgs {
    kms?: string;
    alias?: string;
    options?: IKeyOpts;
}
export interface IKeyOpts {
    key?: Partial<MinimalImportableKey>;
    type?: TKeyType;
    use?: JwkKeyUse;
    x509?: X509Opts;
}
export type SignatureAlgorithmFromKeyArgs = {
    key: IKey;
};
export type SignatureAlgorithmFromKeyTypeArgs = {
    type: TKeyType;
};
export type KeyTypeFromCryptographicSuiteArgs = {
    suite: string;
};
//# sourceMappingURL=key-util-types.d.ts.map