"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.disableTypes = exports.lookup = void 0;
const index_1 = require("./types/index");
const detector_1 = require("./detector");
const globalOptions = {
    disabledTypes: [],
};
/**
 * Return size information based on an Uint8Array
 *
 * @param {Uint8Array} input
 * @returns {ISizeCalculationResult}
 */
function lookup(input) {
    // detect the file type... don't rely on the extension
    const type = (0, detector_1.detector)(input);
    if (typeof type !== 'undefined') {
        if (globalOptions.disabledTypes.indexOf(type) > -1) {
            throw new TypeError('disabled file type: ' + type);
        }
        // find an appropriate handler for this file type
        const size = index_1.typeHandlers.get(type).calculate(input);
        if (size !== undefined) {
            size.type = size.type ?? type;
            return size;
        }
    }
    // throw up, if we don't understand the file
    throw new TypeError('unsupported file type: ' + type);
}
exports.lookup = lookup;
const disableTypes = (types) => {
    globalOptions.disabledTypes = types;
};
exports.disableTypes = disableTypes;
