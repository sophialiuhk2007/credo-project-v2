import { VerifiablePresentation, CompactJWT, UnsignedCredential, CredentialSubject, VerifiableCredential, UnsignedPresentation, ProofType, CredentialStatusReference } from '@veramo/core';
import { IProofPurpose, IProofType, PresentationSubmission } from '@sphereon/ssi-types';
export type W3CVerifiablePresentationSP = VerifiablePresentation | VerifiablePresentationSP | CompactJWT;
export type W3CVerifiableCredentialSP = VerifiableCredential | VerifiableCredentialSP | CompactJWT;
export interface CredentialStatusSP extends CredentialStatusReference {
    id: string;
    type: string;
    revocationListIndex?: string;
    revocationListCredential?: string;
}
export interface CredentialProofSP extends ProofType {
    type: string | IProofType;
    created: string;
    proofPurpose: IProofPurpose | string;
    verificationMethod: string;
    challenge?: string;
    domain?: string;
    proofValue?: string;
    jws?: string;
    nonce?: string;
    requiredRevealStatements?: string[];
    [x: string]: string | string[] | undefined;
}
export interface UnsignedCredentialSP extends UnsignedCredential {
    credentialSubject: CredentialSubject[] | CredentialSubject;
    credentialStatus?: CredentialStatusSP;
    validFrom?: string;
    validUntil?: string;
}
export interface VerifiableCredentialSP extends UnsignedCredentialSP {
    proof: CredentialProofSP | CredentialProofSP[] | ProofType;
}
export interface UnsignedPresentationSP extends UnsignedPresentation {
    type: string[] | string;
    verifiableCredential: W3CVerifiableCredentialSP[];
    presentation_submission?: PresentationSubmission;
    [x: string]: any;
}
export interface VerifiablePresentationSP extends UnsignedPresentationSP {
    proof: CredentialProofSP | CredentialProofSP[] | ProofType;
}
//# sourceMappingURL=vc-data-models.d.ts.map