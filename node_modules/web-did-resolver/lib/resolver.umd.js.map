{"version":3,"file":"resolver.umd.js","sources":["../src/resolver.ts"],"sourcesContent":["import fetch from 'cross-fetch'\nimport { DIDDocument, DIDResolutionResult, DIDResolver, ParsedDID } from 'did-resolver'\n\nconst DOC_PATH = '/.well-known/did.json'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function get(url: string): Promise<any> {\n  const res = await fetch(url, { mode: 'cors' })\n  if (res.status >= 400) {\n    throw new Error(`Bad response ${res.statusText}`)\n  }\n  return res.json()\n}\n\nexport function getResolver(): Record<string, DIDResolver> {\n  async function resolve(did: string, parsed: ParsedDID): Promise<DIDResolutionResult> {\n    let err = null\n    let path = decodeURIComponent(parsed.id) + DOC_PATH\n    const id = parsed.id.split(':')\n    if (id.length > 1) {\n      path = id.map(decodeURIComponent).join('/') + '/did.json'\n    }\n\n    const url = `https://${path}`\n\n    const didDocumentMetadata = {}\n    let didDocument: DIDDocument | null = null\n\n    do {\n      try {\n        didDocument = await get(url)\n      } catch (error) {\n        err = `resolver_error: DID must resolve to a valid https URL containing a JSON document: ${error}`\n        break\n      }\n\n      // TODO: this excludes the use of query params\n      const docIdMatchesDid = didDocument?.id === did\n      if (!docIdMatchesDid) {\n        err = 'resolver_error: DID document id does not match requested did'\n        // break // uncomment this when adding more checks\n      }\n      // eslint-disable-next-line no-constant-condition\n    } while (false)\n\n    const contentType =\n      typeof didDocument?.['@context'] !== 'undefined' ? 'application/did+ld+json' : 'application/did+json'\n\n    if (err) {\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: {\n          error: 'notFound',\n          message: err,\n        },\n      }\n    } else {\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: { contentType },\n      }\n    }\n  }\n\n  return { web: resolve }\n}\n"],"names":["get","url","Promise","resolve","fetch","mode","then","res","status","Error","statusText","json","e","reject","_settle","pact","state","value","_Pact","s","v","bind","DOC_PATH","prototype","onFulfilled","onRejected","result","callback","_this","getResolver","did","parsed","_interrupt","_temp4","contentType","didDocument","err","didDocumentMetadata","didResolutionMetadata","error","message","path","decodeURIComponent","id","split","length","map","join","_temp3","_do","_temp2","docIdMatchesDid","_temp","_catch","_get","web"],"mappings":"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"}